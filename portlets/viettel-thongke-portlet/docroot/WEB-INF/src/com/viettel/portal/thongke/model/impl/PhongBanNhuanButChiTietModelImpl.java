/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.viettel.portal.thongke.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.viettel.portal.thongke.model.PhongBanNhuanButChiTiet;
import com.viettel.portal.thongke.model.PhongBanNhuanButChiTietModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PhongBanNhuanButChiTiet service. Represents a row in the &quot;portal_phongbannhuanbutchitiet&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viettel.portal.thongke.model.PhongBanNhuanButChiTietModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PhongBanNhuanButChiTietImpl}.
 * </p>
 *
 * @author lamvn
 * @see PhongBanNhuanButChiTietImpl
 * @see com.viettel.portal.thongke.model.PhongBanNhuanButChiTiet
 * @see com.viettel.portal.thongke.model.PhongBanNhuanButChiTietModel
 * @generated
 */
public class PhongBanNhuanButChiTietModelImpl extends BaseModelImpl<PhongBanNhuanButChiTiet>
	implements PhongBanNhuanButChiTietModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a phong ban nhuan but chi tiet model instance should use the {@link com.viettel.portal.thongke.model.PhongBanNhuanButChiTiet} interface instead.
	 */
	public static final String TABLE_NAME = "portal_phongbannhuanbutchitiet";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "phongBanNhuanButId", Types.BIGINT },
			{ "phongBanId", Types.BIGINT },
			{ "phongBanTen", Types.VARCHAR },
			{ "rating", Types.VARCHAR },
			{ "ratingValue", Types.DOUBLE }
		};
	public static final String TABLE_SQL_CREATE = "create table portal_phongbannhuanbutchitiet (id_ LONG not null primary key,phongBanNhuanButId LONG,phongBanId LONG,phongBanTen VARCHAR(1000) null,rating VARCHAR(75) null,ratingValue DOUBLE)";
	public static final String TABLE_SQL_DROP = "drop table portal_phongbannhuanbutchitiet";
	public static final String ORDER_BY_JPQL = " ORDER BY phongBanNhuanButChiTiet.phongBanNhuanButId DESC";
	public static final String ORDER_BY_SQL = " ORDER BY portal_phongbannhuanbutchitiet.phongBanNhuanButId DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viettel.portal.thongke.model.PhongBanNhuanButChiTiet"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viettel.portal.thongke.model.PhongBanNhuanButChiTiet"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.viettel.portal.thongke.model.PhongBanNhuanButChiTiet"),
			true);
	public static long PHONGBANID_COLUMN_BITMASK = 1L;
	public static long PHONGBANNHUANBUTID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viettel.portal.thongke.model.PhongBanNhuanButChiTiet"));

	public PhongBanNhuanButChiTietModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PhongBanNhuanButChiTiet.class;
	}

	@Override
	public String getModelClassName() {
		return PhongBanNhuanButChiTiet.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("phongBanNhuanButId", getPhongBanNhuanButId());
		attributes.put("phongBanId", getPhongBanId());
		attributes.put("phongBanTen", getPhongBanTen());
		attributes.put("rating", getRating());
		attributes.put("ratingValue", getRatingValue());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long phongBanNhuanButId = (Long)attributes.get("phongBanNhuanButId");

		if (phongBanNhuanButId != null) {
			setPhongBanNhuanButId(phongBanNhuanButId);
		}

		Long phongBanId = (Long)attributes.get("phongBanId");

		if (phongBanId != null) {
			setPhongBanId(phongBanId);
		}

		String phongBanTen = (String)attributes.get("phongBanTen");

		if (phongBanTen != null) {
			setPhongBanTen(phongBanTen);
		}

		String rating = (String)attributes.get("rating");

		if (rating != null) {
			setRating(rating);
		}

		Double ratingValue = (Double)attributes.get("ratingValue");

		if (ratingValue != null) {
			setRatingValue(ratingValue);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getPhongBanNhuanButId() {
		return _phongBanNhuanButId;
	}

	@Override
	public void setPhongBanNhuanButId(long phongBanNhuanButId) {
		_columnBitmask = -1L;

		if (!_setOriginalPhongBanNhuanButId) {
			_setOriginalPhongBanNhuanButId = true;

			_originalPhongBanNhuanButId = _phongBanNhuanButId;
		}

		_phongBanNhuanButId = phongBanNhuanButId;
	}

	public long getOriginalPhongBanNhuanButId() {
		return _originalPhongBanNhuanButId;
	}

	@Override
	public long getPhongBanId() {
		return _phongBanId;
	}

	@Override
	public void setPhongBanId(long phongBanId) {
		_columnBitmask |= PHONGBANID_COLUMN_BITMASK;

		if (!_setOriginalPhongBanId) {
			_setOriginalPhongBanId = true;

			_originalPhongBanId = _phongBanId;
		}

		_phongBanId = phongBanId;
	}

	public long getOriginalPhongBanId() {
		return _originalPhongBanId;
	}

	@Override
	public String getPhongBanTen() {
		if (_phongBanTen == null) {
			return StringPool.BLANK;
		}
		else {
			return _phongBanTen;
		}
	}

	@Override
	public void setPhongBanTen(String phongBanTen) {
		_phongBanTen = phongBanTen;
	}

	@Override
	public String getRating() {
		if (_rating == null) {
			return StringPool.BLANK;
		}
		else {
			return _rating;
		}
	}

	@Override
	public void setRating(String rating) {
		_rating = rating;
	}

	@Override
	public double getRatingValue() {
		return _ratingValue;
	}

	@Override
	public void setRatingValue(double ratingValue) {
		_ratingValue = ratingValue;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			PhongBanNhuanButChiTiet.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PhongBanNhuanButChiTiet toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PhongBanNhuanButChiTiet)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PhongBanNhuanButChiTietImpl phongBanNhuanButChiTietImpl = new PhongBanNhuanButChiTietImpl();

		phongBanNhuanButChiTietImpl.setId(getId());
		phongBanNhuanButChiTietImpl.setPhongBanNhuanButId(getPhongBanNhuanButId());
		phongBanNhuanButChiTietImpl.setPhongBanId(getPhongBanId());
		phongBanNhuanButChiTietImpl.setPhongBanTen(getPhongBanTen());
		phongBanNhuanButChiTietImpl.setRating(getRating());
		phongBanNhuanButChiTietImpl.setRatingValue(getRatingValue());

		phongBanNhuanButChiTietImpl.resetOriginalValues();

		return phongBanNhuanButChiTietImpl;
	}

	@Override
	public int compareTo(PhongBanNhuanButChiTiet phongBanNhuanButChiTiet) {
		int value = 0;

		if (getPhongBanNhuanButId() < phongBanNhuanButChiTiet.getPhongBanNhuanButId()) {
			value = -1;
		}
		else if (getPhongBanNhuanButId() > phongBanNhuanButChiTiet.getPhongBanNhuanButId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PhongBanNhuanButChiTiet)) {
			return false;
		}

		PhongBanNhuanButChiTiet phongBanNhuanButChiTiet = (PhongBanNhuanButChiTiet)obj;

		long primaryKey = phongBanNhuanButChiTiet.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PhongBanNhuanButChiTietModelImpl phongBanNhuanButChiTietModelImpl = this;

		phongBanNhuanButChiTietModelImpl._originalPhongBanNhuanButId = phongBanNhuanButChiTietModelImpl._phongBanNhuanButId;

		phongBanNhuanButChiTietModelImpl._setOriginalPhongBanNhuanButId = false;

		phongBanNhuanButChiTietModelImpl._originalPhongBanId = phongBanNhuanButChiTietModelImpl._phongBanId;

		phongBanNhuanButChiTietModelImpl._setOriginalPhongBanId = false;

		phongBanNhuanButChiTietModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PhongBanNhuanButChiTiet> toCacheModel() {
		PhongBanNhuanButChiTietCacheModel phongBanNhuanButChiTietCacheModel = new PhongBanNhuanButChiTietCacheModel();

		phongBanNhuanButChiTietCacheModel.id = getId();

		phongBanNhuanButChiTietCacheModel.phongBanNhuanButId = getPhongBanNhuanButId();

		phongBanNhuanButChiTietCacheModel.phongBanId = getPhongBanId();

		phongBanNhuanButChiTietCacheModel.phongBanTen = getPhongBanTen();

		String phongBanTen = phongBanNhuanButChiTietCacheModel.phongBanTen;

		if ((phongBanTen != null) && (phongBanTen.length() == 0)) {
			phongBanNhuanButChiTietCacheModel.phongBanTen = null;
		}

		phongBanNhuanButChiTietCacheModel.rating = getRating();

		String rating = phongBanNhuanButChiTietCacheModel.rating;

		if ((rating != null) && (rating.length() == 0)) {
			phongBanNhuanButChiTietCacheModel.rating = null;
		}

		phongBanNhuanButChiTietCacheModel.ratingValue = getRatingValue();

		return phongBanNhuanButChiTietCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", phongBanNhuanButId=");
		sb.append(getPhongBanNhuanButId());
		sb.append(", phongBanId=");
		sb.append(getPhongBanId());
		sb.append(", phongBanTen=");
		sb.append(getPhongBanTen());
		sb.append(", rating=");
		sb.append(getRating());
		sb.append(", ratingValue=");
		sb.append(getRatingValue());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.viettel.portal.thongke.model.PhongBanNhuanButChiTiet");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phongBanNhuanButId</column-name><column-value><![CDATA[");
		sb.append(getPhongBanNhuanButId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phongBanId</column-name><column-value><![CDATA[");
		sb.append(getPhongBanId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phongBanTen</column-name><column-value><![CDATA[");
		sb.append(getPhongBanTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rating</column-name><column-value><![CDATA[");
		sb.append(getRating());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ratingValue</column-name><column-value><![CDATA[");
		sb.append(getRatingValue());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PhongBanNhuanButChiTiet.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PhongBanNhuanButChiTiet.class
		};
	private long _id;
	private long _phongBanNhuanButId;
	private long _originalPhongBanNhuanButId;
	private boolean _setOriginalPhongBanNhuanButId;
	private long _phongBanId;
	private long _originalPhongBanId;
	private boolean _setOriginalPhongBanId;
	private String _phongBanTen;
	private String _rating;
	private double _ratingValue;
	private long _columnBitmask;
	private PhongBanNhuanButChiTiet _escapedModel;
}