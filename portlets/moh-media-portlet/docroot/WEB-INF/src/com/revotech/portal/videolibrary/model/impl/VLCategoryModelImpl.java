/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.revotech.portal.videolibrary.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.revotech.portal.videolibrary.model.VLCategory;
import com.revotech.portal.videolibrary.model.VLCategoryModel;
import com.revotech.portal.videolibrary.model.VLCategorySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VLCategory service. Represents a row in the &quot;portal_videocategory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.revotech.portal.videolibrary.model.VLCategoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VLCategoryImpl}.
 * </p>
 *
 * @author ChucHV
 * @see VLCategoryImpl
 * @see com.revotech.portal.videolibrary.model.VLCategory
 * @see com.revotech.portal.videolibrary.model.VLCategoryModel
 * @generated
 */
@JSON(strict = true)
public class VLCategoryModelImpl extends BaseModelImpl<VLCategory>
	implements VLCategoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v l category model instance should use the {@link com.revotech.portal.videolibrary.model.VLCategory} interface instead.
	 */
	public static final String TABLE_NAME = "portal_videocategory";
	public static final Object[][] TABLE_COLUMNS = {
			{ "categoryId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "categoryName", Types.VARCHAR },
			{ "invisible", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table portal_videocategory (categoryId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,categoryName VARCHAR(250) null,invisible BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table portal_videocategory";
	public static final String ORDER_BY_JPQL = " ORDER BY vlCategory.modifiedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY portal_videocategory.modifiedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.revotech.portal.videolibrary.model.VLCategory"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.revotech.portal.videolibrary.model.VLCategory"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.revotech.portal.videolibrary.model.VLCategory"),
			true);
	public static long CATEGORYID_COLUMN_BITMASK = 1L;
	public static long CATEGORYNAME_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long INVISIBLE_COLUMN_BITMASK = 8L;
	public static long MODIFIEDDATE_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VLCategory toModel(VLCategorySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VLCategory model = new VLCategoryImpl();

		model.setCategoryId(soapModel.getCategoryId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCategoryName(soapModel.getCategoryName());
		model.setInvisible(soapModel.getInvisible());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VLCategory> toModels(VLCategorySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VLCategory> models = new ArrayList<VLCategory>(soapModels.length);

		for (VLCategorySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.revotech.portal.videolibrary.model.VLCategory"));

	public VLCategoryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _categoryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCategoryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _categoryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VLCategory.class;
	}

	@Override
	public String getModelClassName() {
		return VLCategory.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("categoryId", getCategoryId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("categoryName", getCategoryName());
		attributes.put("invisible", getInvisible());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String categoryName = (String)attributes.get("categoryName");

		if (categoryName != null) {
			setCategoryName(categoryName);
		}

		Boolean invisible = (Boolean)attributes.get("invisible");

		if (invisible != null) {
			setInvisible(invisible);
		}
	}

	@JSON
	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_columnBitmask = -1L;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCategoryName() {
		if (_categoryName == null) {
			return StringPool.BLANK;
		}
		else {
			return _categoryName;
		}
	}

	@Override
	public void setCategoryName(String categoryName) {
		_columnBitmask |= CATEGORYNAME_COLUMN_BITMASK;

		if (_originalCategoryName == null) {
			_originalCategoryName = _categoryName;
		}

		_categoryName = categoryName;
	}

	public String getOriginalCategoryName() {
		return GetterUtil.getString(_originalCategoryName);
	}

	@JSON
	@Override
	public boolean getInvisible() {
		return _invisible;
	}

	@Override
	public boolean isInvisible() {
		return _invisible;
	}

	@Override
	public void setInvisible(boolean invisible) {
		_columnBitmask |= INVISIBLE_COLUMN_BITMASK;

		if (!_setOriginalInvisible) {
			_setOriginalInvisible = true;

			_originalInvisible = _invisible;
		}

		_invisible = invisible;
	}

	public boolean getOriginalInvisible() {
		return _originalInvisible;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			VLCategory.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VLCategory toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VLCategory)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VLCategoryImpl vlCategoryImpl = new VLCategoryImpl();

		vlCategoryImpl.setCategoryId(getCategoryId());
		vlCategoryImpl.setGroupId(getGroupId());
		vlCategoryImpl.setCompanyId(getCompanyId());
		vlCategoryImpl.setUserId(getUserId());
		vlCategoryImpl.setUserName(getUserName());
		vlCategoryImpl.setCreateDate(getCreateDate());
		vlCategoryImpl.setModifiedDate(getModifiedDate());
		vlCategoryImpl.setCategoryName(getCategoryName());
		vlCategoryImpl.setInvisible(getInvisible());

		vlCategoryImpl.resetOriginalValues();

		return vlCategoryImpl;
	}

	@Override
	public int compareTo(VLCategory vlCategory) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(),
				vlCategory.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VLCategory)) {
			return false;
		}

		VLCategory vlCategory = (VLCategory)obj;

		long primaryKey = vlCategory.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		VLCategoryModelImpl vlCategoryModelImpl = this;

		vlCategoryModelImpl._originalCategoryId = vlCategoryModelImpl._categoryId;

		vlCategoryModelImpl._setOriginalCategoryId = false;

		vlCategoryModelImpl._originalGroupId = vlCategoryModelImpl._groupId;

		vlCategoryModelImpl._setOriginalGroupId = false;

		vlCategoryModelImpl._originalCategoryName = vlCategoryModelImpl._categoryName;

		vlCategoryModelImpl._originalInvisible = vlCategoryModelImpl._invisible;

		vlCategoryModelImpl._setOriginalInvisible = false;

		vlCategoryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VLCategory> toCacheModel() {
		VLCategoryCacheModel vlCategoryCacheModel = new VLCategoryCacheModel();

		vlCategoryCacheModel.categoryId = getCategoryId();

		vlCategoryCacheModel.groupId = getGroupId();

		vlCategoryCacheModel.companyId = getCompanyId();

		vlCategoryCacheModel.userId = getUserId();

		vlCategoryCacheModel.userName = getUserName();

		String userName = vlCategoryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			vlCategoryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			vlCategoryCacheModel.createDate = createDate.getTime();
		}
		else {
			vlCategoryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vlCategoryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vlCategoryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		vlCategoryCacheModel.categoryName = getCategoryName();

		String categoryName = vlCategoryCacheModel.categoryName;

		if ((categoryName != null) && (categoryName.length() == 0)) {
			vlCategoryCacheModel.categoryName = null;
		}

		vlCategoryCacheModel.invisible = getInvisible();

		return vlCategoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{categoryId=");
		sb.append(getCategoryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", categoryName=");
		sb.append(getCategoryName());
		sb.append(", invisible=");
		sb.append(getInvisible());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.revotech.portal.videolibrary.model.VLCategory");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryName</column-name><column-value><![CDATA[");
		sb.append(getCategoryName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invisible</column-name><column-value><![CDATA[");
		sb.append(getInvisible());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VLCategory.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VLCategory.class
		};
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _categoryName;
	private String _originalCategoryName;
	private boolean _invisible;
	private boolean _originalInvisible;
	private boolean _setOriginalInvisible;
	private long _columnBitmask;
	private VLCategory _escapedModel;
}