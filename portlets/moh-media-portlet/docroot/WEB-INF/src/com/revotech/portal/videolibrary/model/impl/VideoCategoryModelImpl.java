/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.revotech.portal.videolibrary.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.revotech.portal.videolibrary.model.VideoCategory;
import com.revotech.portal.videolibrary.model.VideoCategoryModel;
import com.revotech.portal.videolibrary.model.VideoCategorySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VideoCategory service. Represents a row in the &quot;VideoCategory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.revotech.portal.videolibrary.model.VideoCategoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VideoCategoryImpl}.
 * </p>
 *
 * @author ChucHV
 * @see VideoCategoryImpl
 * @see com.revotech.portal.videolibrary.model.VideoCategory
 * @see com.revotech.portal.videolibrary.model.VideoCategoryModel
 * @generated
 */
@JSON(strict = true)
public class VideoCategoryModelImpl extends BaseModelImpl<VideoCategory>
	implements VideoCategoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a video category model instance should use the {@link com.revotech.portal.videolibrary.model.VideoCategory} interface instead.
	 */
	public static final String TABLE_NAME = "VideoCategory";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.INTEGER },
			{ "Name", Types.VARCHAR },
			{ "Url", Types.VARCHAR },
			{ "SortOrder", Types.INTEGER },
			{ "ItemCount", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table VideoCategory (ID INTEGER not null primary key,Name VARCHAR(75) null,Url VARCHAR(75) null,SortOrder INTEGER,ItemCount INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table VideoCategory";
	public static final String ORDER_BY_JPQL = " ORDER BY videoCategory.ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY VideoCategory.ID ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.revotech.portal.videolibrary.model.VideoCategory"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.revotech.portal.videolibrary.model.VideoCategory"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VideoCategory toModel(VideoCategorySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VideoCategory model = new VideoCategoryImpl();

		model.setID(soapModel.getID());
		model.setName(soapModel.getName());
		model.setUrl(soapModel.getUrl());
		model.setSortOrder(soapModel.getSortOrder());
		model.setItemCount(soapModel.getItemCount());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VideoCategory> toModels(VideoCategorySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VideoCategory> models = new ArrayList<VideoCategory>(soapModels.length);

		for (VideoCategorySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.revotech.portal.videolibrary.model.VideoCategory"));

	public VideoCategoryModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VideoCategory.class;
	}

	@Override
	public String getModelClassName() {
		return VideoCategory.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ID", getID());
		attributes.put("Name", getName());
		attributes.put("Url", getUrl());
		attributes.put("SortOrder", getSortOrder());
		attributes.put("ItemCount", getItemCount());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer ID = (Integer)attributes.get("ID");

		if (ID != null) {
			setID(ID);
		}

		String Name = (String)attributes.get("Name");

		if (Name != null) {
			setName(Name);
		}

		String Url = (String)attributes.get("Url");

		if (Url != null) {
			setUrl(Url);
		}

		Integer SortOrder = (Integer)attributes.get("SortOrder");

		if (SortOrder != null) {
			setSortOrder(SortOrder);
		}

		Integer ItemCount = (Integer)attributes.get("ItemCount");

		if (ItemCount != null) {
			setItemCount(ItemCount);
		}
	}

	@JSON
	@Override
	public int getID() {
		return _ID;
	}

	@Override
	public void setID(int ID) {
		_ID = ID;
	}

	@JSON
	@Override
	public String getName() {
		if (_Name == null) {
			return StringPool.BLANK;
		}
		else {
			return _Name;
		}
	}

	@Override
	public void setName(String Name) {
		_Name = Name;
	}

	@JSON
	@Override
	public String getUrl() {
		if (_Url == null) {
			return StringPool.BLANK;
		}
		else {
			return _Url;
		}
	}

	@Override
	public void setUrl(String Url) {
		_Url = Url;
	}

	@JSON
	@Override
	public int getSortOrder() {
		return _SortOrder;
	}

	@Override
	public void setSortOrder(int SortOrder) {
		_SortOrder = SortOrder;
	}

	@JSON
	@Override
	public int getItemCount() {
		return _ItemCount;
	}

	@Override
	public void setItemCount(int ItemCount) {
		_ItemCount = ItemCount;
	}

	@Override
	public VideoCategory toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VideoCategory)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VideoCategoryImpl videoCategoryImpl = new VideoCategoryImpl();

		videoCategoryImpl.setID(getID());
		videoCategoryImpl.setName(getName());
		videoCategoryImpl.setUrl(getUrl());
		videoCategoryImpl.setSortOrder(getSortOrder());
		videoCategoryImpl.setItemCount(getItemCount());

		videoCategoryImpl.resetOriginalValues();

		return videoCategoryImpl;
	}

	@Override
	public int compareTo(VideoCategory videoCategory) {
		int primaryKey = videoCategory.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VideoCategory)) {
			return false;
		}

		VideoCategory videoCategory = (VideoCategory)obj;

		int primaryKey = videoCategory.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<VideoCategory> toCacheModel() {
		VideoCategoryCacheModel videoCategoryCacheModel = new VideoCategoryCacheModel();

		videoCategoryCacheModel.ID = getID();

		videoCategoryCacheModel.Name = getName();

		String Name = videoCategoryCacheModel.Name;

		if ((Name != null) && (Name.length() == 0)) {
			videoCategoryCacheModel.Name = null;
		}

		videoCategoryCacheModel.Url = getUrl();

		String Url = videoCategoryCacheModel.Url;

		if ((Url != null) && (Url.length() == 0)) {
			videoCategoryCacheModel.Url = null;
		}

		videoCategoryCacheModel.SortOrder = getSortOrder();

		videoCategoryCacheModel.ItemCount = getItemCount();

		return videoCategoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{ID=");
		sb.append(getID());
		sb.append(", Name=");
		sb.append(getName());
		sb.append(", Url=");
		sb.append(getUrl());
		sb.append(", SortOrder=");
		sb.append(getSortOrder());
		sb.append(", ItemCount=");
		sb.append(getItemCount());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.revotech.portal.videolibrary.model.VideoCategory");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ID</column-name><column-value><![CDATA[");
		sb.append(getID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Url</column-name><column-value><![CDATA[");
		sb.append(getUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SortOrder</column-name><column-value><![CDATA[");
		sb.append(getSortOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ItemCount</column-name><column-value><![CDATA[");
		sb.append(getItemCount());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VideoCategory.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VideoCategory.class
		};
	private int _ID;
	private String _Name;
	private String _Url;
	private int _SortOrder;
	private int _ItemCount;
	private VideoCategory _escapedModel;
}