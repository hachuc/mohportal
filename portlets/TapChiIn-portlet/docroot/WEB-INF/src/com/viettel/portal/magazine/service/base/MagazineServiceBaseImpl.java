/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.viettel.portal.magazine.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.viettel.portal.magazine.model.Magazine;
import com.viettel.portal.magazine.service.MagazineService;
import com.viettel.portal.magazine.service.persistence.MagazineContentFinder;
import com.viettel.portal.magazine.service.persistence.MagazineContentPersistence;
import com.viettel.portal.magazine.service.persistence.MagazineFinder;
import com.viettel.portal.magazine.service.persistence.MagazinePersistence;
import com.viettel.portal.magazine.service.persistence.MagazineZonePersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the magazine remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.viettel.portal.magazine.service.impl.MagazineServiceImpl}.
 * </p>
 *
 * @author namtv
 * @see com.viettel.portal.magazine.service.impl.MagazineServiceImpl
 * @see com.viettel.portal.magazine.service.MagazineServiceUtil
 * @generated
 */
public abstract class MagazineServiceBaseImpl extends BaseServiceImpl
	implements MagazineService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.viettel.portal.magazine.service.MagazineServiceUtil} to access the magazine remote service.
	 */

	/**
	 * Returns the magazine local service.
	 *
	 * @return the magazine local service
	 */
	public com.viettel.portal.magazine.service.MagazineLocalService getMagazineLocalService() {
		return magazineLocalService;
	}

	/**
	 * Sets the magazine local service.
	 *
	 * @param magazineLocalService the magazine local service
	 */
	public void setMagazineLocalService(
		com.viettel.portal.magazine.service.MagazineLocalService magazineLocalService) {
		this.magazineLocalService = magazineLocalService;
	}

	/**
	 * Returns the magazine remote service.
	 *
	 * @return the magazine remote service
	 */
	public com.viettel.portal.magazine.service.MagazineService getMagazineService() {
		return magazineService;
	}

	/**
	 * Sets the magazine remote service.
	 *
	 * @param magazineService the magazine remote service
	 */
	public void setMagazineService(
		com.viettel.portal.magazine.service.MagazineService magazineService) {
		this.magazineService = magazineService;
	}

	/**
	 * Returns the magazine persistence.
	 *
	 * @return the magazine persistence
	 */
	public MagazinePersistence getMagazinePersistence() {
		return magazinePersistence;
	}

	/**
	 * Sets the magazine persistence.
	 *
	 * @param magazinePersistence the magazine persistence
	 */
	public void setMagazinePersistence(MagazinePersistence magazinePersistence) {
		this.magazinePersistence = magazinePersistence;
	}

	/**
	 * Returns the magazine finder.
	 *
	 * @return the magazine finder
	 */
	public MagazineFinder getMagazineFinder() {
		return magazineFinder;
	}

	/**
	 * Sets the magazine finder.
	 *
	 * @param magazineFinder the magazine finder
	 */
	public void setMagazineFinder(MagazineFinder magazineFinder) {
		this.magazineFinder = magazineFinder;
	}

	/**
	 * Returns the magazine content local service.
	 *
	 * @return the magazine content local service
	 */
	public com.viettel.portal.magazine.service.MagazineContentLocalService getMagazineContentLocalService() {
		return magazineContentLocalService;
	}

	/**
	 * Sets the magazine content local service.
	 *
	 * @param magazineContentLocalService the magazine content local service
	 */
	public void setMagazineContentLocalService(
		com.viettel.portal.magazine.service.MagazineContentLocalService magazineContentLocalService) {
		this.magazineContentLocalService = magazineContentLocalService;
	}

	/**
	 * Returns the magazine content remote service.
	 *
	 * @return the magazine content remote service
	 */
	public com.viettel.portal.magazine.service.MagazineContentService getMagazineContentService() {
		return magazineContentService;
	}

	/**
	 * Sets the magazine content remote service.
	 *
	 * @param magazineContentService the magazine content remote service
	 */
	public void setMagazineContentService(
		com.viettel.portal.magazine.service.MagazineContentService magazineContentService) {
		this.magazineContentService = magazineContentService;
	}

	/**
	 * Returns the magazine content persistence.
	 *
	 * @return the magazine content persistence
	 */
	public MagazineContentPersistence getMagazineContentPersistence() {
		return magazineContentPersistence;
	}

	/**
	 * Sets the magazine content persistence.
	 *
	 * @param magazineContentPersistence the magazine content persistence
	 */
	public void setMagazineContentPersistence(
		MagazineContentPersistence magazineContentPersistence) {
		this.magazineContentPersistence = magazineContentPersistence;
	}

	/**
	 * Returns the magazine content finder.
	 *
	 * @return the magazine content finder
	 */
	public MagazineContentFinder getMagazineContentFinder() {
		return magazineContentFinder;
	}

	/**
	 * Sets the magazine content finder.
	 *
	 * @param magazineContentFinder the magazine content finder
	 */
	public void setMagazineContentFinder(
		MagazineContentFinder magazineContentFinder) {
		this.magazineContentFinder = magazineContentFinder;
	}

	/**
	 * Returns the magazine zone local service.
	 *
	 * @return the magazine zone local service
	 */
	public com.viettel.portal.magazine.service.MagazineZoneLocalService getMagazineZoneLocalService() {
		return magazineZoneLocalService;
	}

	/**
	 * Sets the magazine zone local service.
	 *
	 * @param magazineZoneLocalService the magazine zone local service
	 */
	public void setMagazineZoneLocalService(
		com.viettel.portal.magazine.service.MagazineZoneLocalService magazineZoneLocalService) {
		this.magazineZoneLocalService = magazineZoneLocalService;
	}

	/**
	 * Returns the magazine zone remote service.
	 *
	 * @return the magazine zone remote service
	 */
	public com.viettel.portal.magazine.service.MagazineZoneService getMagazineZoneService() {
		return magazineZoneService;
	}

	/**
	 * Sets the magazine zone remote service.
	 *
	 * @param magazineZoneService the magazine zone remote service
	 */
	public void setMagazineZoneService(
		com.viettel.portal.magazine.service.MagazineZoneService magazineZoneService) {
		this.magazineZoneService = magazineZoneService;
	}

	/**
	 * Returns the magazine zone persistence.
	 *
	 * @return the magazine zone persistence
	 */
	public MagazineZonePersistence getMagazineZonePersistence() {
		return magazineZonePersistence;
	}

	/**
	 * Sets the magazine zone persistence.
	 *
	 * @param magazineZonePersistence the magazine zone persistence
	 */
	public void setMagazineZonePersistence(
		MagazineZonePersistence magazineZonePersistence) {
		this.magazineZonePersistence = magazineZonePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Magazine.class;
	}

	protected String getModelClassName() {
		return Magazine.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = magazinePersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.viettel.portal.magazine.service.MagazineLocalService.class)
	protected com.viettel.portal.magazine.service.MagazineLocalService magazineLocalService;
	@BeanReference(type = com.viettel.portal.magazine.service.MagazineService.class)
	protected com.viettel.portal.magazine.service.MagazineService magazineService;
	@BeanReference(type = MagazinePersistence.class)
	protected MagazinePersistence magazinePersistence;
	@BeanReference(type = MagazineFinder.class)
	protected MagazineFinder magazineFinder;
	@BeanReference(type = com.viettel.portal.magazine.service.MagazineContentLocalService.class)
	protected com.viettel.portal.magazine.service.MagazineContentLocalService magazineContentLocalService;
	@BeanReference(type = com.viettel.portal.magazine.service.MagazineContentService.class)
	protected com.viettel.portal.magazine.service.MagazineContentService magazineContentService;
	@BeanReference(type = MagazineContentPersistence.class)
	protected MagazineContentPersistence magazineContentPersistence;
	@BeanReference(type = MagazineContentFinder.class)
	protected MagazineContentFinder magazineContentFinder;
	@BeanReference(type = com.viettel.portal.magazine.service.MagazineZoneLocalService.class)
	protected com.viettel.portal.magazine.service.MagazineZoneLocalService magazineZoneLocalService;
	@BeanReference(type = com.viettel.portal.magazine.service.MagazineZoneService.class)
	protected com.viettel.portal.magazine.service.MagazineZoneService magazineZoneService;
	@BeanReference(type = MagazineZonePersistence.class)
	protected MagazineZonePersistence magazineZonePersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private MagazineServiceClpInvoker _clpInvoker = new MagazineServiceClpInvoker();
}