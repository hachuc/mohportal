/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.viettel.portal.videolibrary.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.viettel.portal.videolibrary.model.VLVideo;
import com.viettel.portal.videolibrary.model.VLVideoModel;
import com.viettel.portal.videolibrary.model.VLVideoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VLVideo service. Represents a row in the &quot;portal_video&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viettel.portal.videolibrary.model.VLVideoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VLVideoImpl}.
 * </p>
 *
 * @author ChucHV
 * @see VLVideoImpl
 * @see com.viettel.portal.videolibrary.model.VLVideo
 * @see com.viettel.portal.videolibrary.model.VLVideoModel
 * @generated
 */
@JSON(strict = true)
public class VLVideoModelImpl extends BaseModelImpl<VLVideo>
	implements VLVideoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v l video model instance should use the {@link com.viettel.portal.videolibrary.model.VLVideo} interface instead.
	 */
	public static final String TABLE_NAME = "portal_video";
	public static final Object[][] TABLE_COLUMNS = {
			{ "videoId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "videoName", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "videoType", Types.VARCHAR },
			{ "videoUrl", Types.VARCHAR },
			{ "viewCount", Types.INTEGER },
			{ "fileId", Types.BIGINT },
			{ "image", Types.BOOLEAN },
			{ "imageId", Types.BIGINT },
			{ "smallImageUrl", Types.VARCHAR },
			{ "relateId", Types.BIGINT },
			{ "invisible", Types.BOOLEAN },
			{ "categoryId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table portal_video (videoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,videoName VARCHAR(500) null,description VARCHAR(2000) null,videoType VARCHAR(250) null,videoUrl VARCHAR(2000) null,viewCount INTEGER,fileId LONG,image BOOLEAN,imageId LONG,smallImageUrl VARCHAR(75) null,relateId LONG,invisible BOOLEAN,categoryId LONG)";
	public static final String TABLE_SQL_DROP = "drop table portal_video";
	public static final String ORDER_BY_JPQL = " ORDER BY vlVideo.modifiedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY portal_video.modifiedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viettel.portal.videolibrary.model.VLVideo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viettel.portal.videolibrary.model.VLVideo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.viettel.portal.videolibrary.model.VLVideo"),
			true);
	public static long CATEGORYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long MODIFIEDDATE_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VLVideo toModel(VLVideoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VLVideo model = new VLVideoImpl();

		model.setVideoId(soapModel.getVideoId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setVideoName(soapModel.getVideoName());
		model.setDescription(soapModel.getDescription());
		model.setVideoType(soapModel.getVideoType());
		model.setVideoUrl(soapModel.getVideoUrl());
		model.setViewCount(soapModel.getViewCount());
		model.setFileId(soapModel.getFileId());
		model.setImage(soapModel.getImage());
		model.setImageId(soapModel.getImageId());
		model.setSmallImageUrl(soapModel.getSmallImageUrl());
		model.setRelateId(soapModel.getRelateId());
		model.setInvisible(soapModel.getInvisible());
		model.setCategoryId(soapModel.getCategoryId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VLVideo> toModels(VLVideoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VLVideo> models = new ArrayList<VLVideo>(soapModels.length);

		for (VLVideoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viettel.portal.videolibrary.model.VLVideo"));

	public VLVideoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _videoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setVideoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _videoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VLVideo.class;
	}

	@Override
	public String getModelClassName() {
		return VLVideo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("videoId", getVideoId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("videoName", getVideoName());
		attributes.put("description", getDescription());
		attributes.put("videoType", getVideoType());
		attributes.put("videoUrl", getVideoUrl());
		attributes.put("viewCount", getViewCount());
		attributes.put("fileId", getFileId());
		attributes.put("image", getImage());
		attributes.put("imageId", getImageId());
		attributes.put("smallImageUrl", getSmallImageUrl());
		attributes.put("relateId", getRelateId());
		attributes.put("invisible", getInvisible());
		attributes.put("categoryId", getCategoryId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long videoId = (Long)attributes.get("videoId");

		if (videoId != null) {
			setVideoId(videoId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String videoName = (String)attributes.get("videoName");

		if (videoName != null) {
			setVideoName(videoName);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String videoType = (String)attributes.get("videoType");

		if (videoType != null) {
			setVideoType(videoType);
		}

		String videoUrl = (String)attributes.get("videoUrl");

		if (videoUrl != null) {
			setVideoUrl(videoUrl);
		}

		Integer viewCount = (Integer)attributes.get("viewCount");

		if (viewCount != null) {
			setViewCount(viewCount);
		}

		Long fileId = (Long)attributes.get("fileId");

		if (fileId != null) {
			setFileId(fileId);
		}

		Boolean image = (Boolean)attributes.get("image");

		if (image != null) {
			setImage(image);
		}

		Long imageId = (Long)attributes.get("imageId");

		if (imageId != null) {
			setImageId(imageId);
		}

		String smallImageUrl = (String)attributes.get("smallImageUrl");

		if (smallImageUrl != null) {
			setSmallImageUrl(smallImageUrl);
		}

		Long relateId = (Long)attributes.get("relateId");

		if (relateId != null) {
			setRelateId(relateId);
		}

		Boolean invisible = (Boolean)attributes.get("invisible");

		if (invisible != null) {
			setInvisible(invisible);
		}

		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}
	}

	@JSON
	@Override
	public long getVideoId() {
		return _videoId;
	}

	@Override
	public void setVideoId(long videoId) {
		_videoId = videoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_columnBitmask = -1L;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getVideoName() {
		if (_videoName == null) {
			return StringPool.BLANK;
		}
		else {
			return _videoName;
		}
	}

	@Override
	public void setVideoName(String videoName) {
		_videoName = videoName;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getVideoType() {
		if (_videoType == null) {
			return StringPool.BLANK;
		}
		else {
			return _videoType;
		}
	}

	@Override
	public void setVideoType(String videoType) {
		_videoType = videoType;
	}

	@JSON
	@Override
	public String getVideoUrl() {
		if (_videoUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _videoUrl;
		}
	}

	@Override
	public void setVideoUrl(String videoUrl) {
		_videoUrl = videoUrl;
	}

	@JSON
	@Override
	public int getViewCount() {
		return _viewCount;
	}

	@Override
	public void setViewCount(int viewCount) {
		_viewCount = viewCount;
	}

	@JSON
	@Override
	public long getFileId() {
		return _fileId;
	}

	@Override
	public void setFileId(long fileId) {
		_fileId = fileId;
	}

	@JSON
	@Override
	public boolean getImage() {
		return _image;
	}

	@Override
	public boolean isImage() {
		return _image;
	}

	@Override
	public void setImage(boolean image) {
		_image = image;
	}

	@JSON
	@Override
	public long getImageId() {
		return _imageId;
	}

	@Override
	public void setImageId(long imageId) {
		_imageId = imageId;
	}

	@JSON
	@Override
	public String getSmallImageUrl() {
		if (_smallImageUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _smallImageUrl;
		}
	}

	@Override
	public void setSmallImageUrl(String smallImageUrl) {
		_smallImageUrl = smallImageUrl;
	}

	@JSON
	@Override
	public long getRelateId() {
		return _relateId;
	}

	@Override
	public void setRelateId(long relateId) {
		_relateId = relateId;
	}

	@JSON
	@Override
	public boolean getInvisible() {
		return _invisible;
	}

	@Override
	public boolean isInvisible() {
		return _invisible;
	}

	@Override
	public void setInvisible(boolean invisible) {
		_invisible = invisible;
	}

	@JSON
	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			VLVideo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VLVideo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VLVideo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VLVideoImpl vlVideoImpl = new VLVideoImpl();

		vlVideoImpl.setVideoId(getVideoId());
		vlVideoImpl.setGroupId(getGroupId());
		vlVideoImpl.setCompanyId(getCompanyId());
		vlVideoImpl.setUserId(getUserId());
		vlVideoImpl.setUserName(getUserName());
		vlVideoImpl.setCreateDate(getCreateDate());
		vlVideoImpl.setModifiedDate(getModifiedDate());
		vlVideoImpl.setVideoName(getVideoName());
		vlVideoImpl.setDescription(getDescription());
		vlVideoImpl.setVideoType(getVideoType());
		vlVideoImpl.setVideoUrl(getVideoUrl());
		vlVideoImpl.setViewCount(getViewCount());
		vlVideoImpl.setFileId(getFileId());
		vlVideoImpl.setImage(getImage());
		vlVideoImpl.setImageId(getImageId());
		vlVideoImpl.setSmallImageUrl(getSmallImageUrl());
		vlVideoImpl.setRelateId(getRelateId());
		vlVideoImpl.setInvisible(getInvisible());
		vlVideoImpl.setCategoryId(getCategoryId());

		vlVideoImpl.resetOriginalValues();

		return vlVideoImpl;
	}

	@Override
	public int compareTo(VLVideo vlVideo) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(), vlVideo.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VLVideo)) {
			return false;
		}

		VLVideo vlVideo = (VLVideo)obj;

		long primaryKey = vlVideo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		VLVideoModelImpl vlVideoModelImpl = this;

		vlVideoModelImpl._originalGroupId = vlVideoModelImpl._groupId;

		vlVideoModelImpl._setOriginalGroupId = false;

		vlVideoModelImpl._originalCategoryId = vlVideoModelImpl._categoryId;

		vlVideoModelImpl._setOriginalCategoryId = false;

		vlVideoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VLVideo> toCacheModel() {
		VLVideoCacheModel vlVideoCacheModel = new VLVideoCacheModel();

		vlVideoCacheModel.videoId = getVideoId();

		vlVideoCacheModel.groupId = getGroupId();

		vlVideoCacheModel.companyId = getCompanyId();

		vlVideoCacheModel.userId = getUserId();

		vlVideoCacheModel.userName = getUserName();

		String userName = vlVideoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			vlVideoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			vlVideoCacheModel.createDate = createDate.getTime();
		}
		else {
			vlVideoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vlVideoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vlVideoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		vlVideoCacheModel.videoName = getVideoName();

		String videoName = vlVideoCacheModel.videoName;

		if ((videoName != null) && (videoName.length() == 0)) {
			vlVideoCacheModel.videoName = null;
		}

		vlVideoCacheModel.description = getDescription();

		String description = vlVideoCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			vlVideoCacheModel.description = null;
		}

		vlVideoCacheModel.videoType = getVideoType();

		String videoType = vlVideoCacheModel.videoType;

		if ((videoType != null) && (videoType.length() == 0)) {
			vlVideoCacheModel.videoType = null;
		}

		vlVideoCacheModel.videoUrl = getVideoUrl();

		String videoUrl = vlVideoCacheModel.videoUrl;

		if ((videoUrl != null) && (videoUrl.length() == 0)) {
			vlVideoCacheModel.videoUrl = null;
		}

		vlVideoCacheModel.viewCount = getViewCount();

		vlVideoCacheModel.fileId = getFileId();

		vlVideoCacheModel.image = getImage();

		vlVideoCacheModel.imageId = getImageId();

		vlVideoCacheModel.smallImageUrl = getSmallImageUrl();

		String smallImageUrl = vlVideoCacheModel.smallImageUrl;

		if ((smallImageUrl != null) && (smallImageUrl.length() == 0)) {
			vlVideoCacheModel.smallImageUrl = null;
		}

		vlVideoCacheModel.relateId = getRelateId();

		vlVideoCacheModel.invisible = getInvisible();

		vlVideoCacheModel.categoryId = getCategoryId();

		return vlVideoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{videoId=");
		sb.append(getVideoId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", videoName=");
		sb.append(getVideoName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", videoType=");
		sb.append(getVideoType());
		sb.append(", videoUrl=");
		sb.append(getVideoUrl());
		sb.append(", viewCount=");
		sb.append(getViewCount());
		sb.append(", fileId=");
		sb.append(getFileId());
		sb.append(", image=");
		sb.append(getImage());
		sb.append(", imageId=");
		sb.append(getImageId());
		sb.append(", smallImageUrl=");
		sb.append(getSmallImageUrl());
		sb.append(", relateId=");
		sb.append(getRelateId());
		sb.append(", invisible=");
		sb.append(getInvisible());
		sb.append(", categoryId=");
		sb.append(getCategoryId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.viettel.portal.videolibrary.model.VLVideo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>videoId</column-name><column-value><![CDATA[");
		sb.append(getVideoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoName</column-name><column-value><![CDATA[");
		sb.append(getVideoName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoType</column-name><column-value><![CDATA[");
		sb.append(getVideoType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoUrl</column-name><column-value><![CDATA[");
		sb.append(getVideoUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>viewCount</column-name><column-value><![CDATA[");
		sb.append(getViewCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileId</column-name><column-value><![CDATA[");
		sb.append(getFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>image</column-name><column-value><![CDATA[");
		sb.append(getImage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imageId</column-name><column-value><![CDATA[");
		sb.append(getImageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>smallImageUrl</column-name><column-value><![CDATA[");
		sb.append(getSmallImageUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>relateId</column-name><column-value><![CDATA[");
		sb.append(getRelateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invisible</column-name><column-value><![CDATA[");
		sb.append(getInvisible());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VLVideo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VLVideo.class
		};
	private long _videoId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _videoName;
	private String _description;
	private String _videoType;
	private String _videoUrl;
	private int _viewCount;
	private long _fileId;
	private boolean _image;
	private long _imageId;
	private String _smallImageUrl;
	private long _relateId;
	private boolean _invisible;
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private long _columnBitmask;
	private VLVideo _escapedModel;
}