/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.revotech.portal.tthc.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.revotech.portal.tthc.model.LegalDocument;
import com.revotech.portal.tthc.model.LegalDocumentModel;
import com.revotech.portal.tthc.model.LegalDocumentSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LegalDocument service. Represents a row in the &quot;tthc_LegalDocument&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.revotech.portal.tthc.model.LegalDocumentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LegalDocumentImpl}.
 * </p>
 *
 * @author hieptran
 * @see LegalDocumentImpl
 * @see com.revotech.portal.tthc.model.LegalDocument
 * @see com.revotech.portal.tthc.model.LegalDocumentModel
 * @generated
 */
@JSON(strict = true)
public class LegalDocumentModelImpl extends BaseModelImpl<LegalDocument>
	implements LegalDocumentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a legal document model instance should use the {@link com.revotech.portal.tthc.model.LegalDocument} interface instead.
	 */
	public static final String TABLE_NAME = "tthc_LegalDocument";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ldId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ldCode", Types.VARCHAR },
			{ "ldTitle", Types.VARCHAR },
			{ "ldLink", Types.VARCHAR },
			{ "ldLevel3Link", Types.VARCHAR },
			{ "ldSubcontent", Types.VARCHAR },
			{ "isActive", Types.BOOLEAN },
			{ "idLinhvuc", Types.BIGINT },
			{ "idCoquanbanhanh", Types.BIGINT },
			{ "ldDonvithuchien", Types.VARCHAR },
			{ "ldLevel", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table tthc_LegalDocument (ldId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,ldCode VARCHAR(255) null,ldTitle STRING null,ldLink VARCHAR(1000) null,ldLevel3Link VARCHAR(1000) null,ldSubcontent STRING null,isActive BOOLEAN,idLinhvuc LONG,idCoquanbanhanh LONG,ldDonvithuchien VARCHAR(255) null,ldLevel INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table tthc_LegalDocument";
	public static final String ORDER_BY_JPQL = " ORDER BY legalDocument.ldCode DESC";
	public static final String ORDER_BY_SQL = " ORDER BY tthc_LegalDocument.ldCode DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.revotech.portal.tthc.model.LegalDocument"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.revotech.portal.tthc.model.LegalDocument"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.revotech.portal.tthc.model.LegalDocument"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long ISACTIVE_COLUMN_BITMASK = 2L;
	public static long LDLEVEL_COLUMN_BITMASK = 4L;
	public static long LDCODE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LegalDocument toModel(LegalDocumentSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LegalDocument model = new LegalDocumentImpl();

		model.setLdId(soapModel.getLdId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setLdCode(soapModel.getLdCode());
		model.setLdTitle(soapModel.getLdTitle());
		model.setLdLink(soapModel.getLdLink());
		model.setLdLevel3Link(soapModel.getLdLevel3Link());
		model.setLdSubcontent(soapModel.getLdSubcontent());
		model.setIsActive(soapModel.getIsActive());
		model.setIdLinhvuc(soapModel.getIdLinhvuc());
		model.setIdCoquanbanhanh(soapModel.getIdCoquanbanhanh());
		model.setLdDonvithuchien(soapModel.getLdDonvithuchien());
		model.setLdLevel(soapModel.getLdLevel());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LegalDocument> toModels(LegalDocumentSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LegalDocument> models = new ArrayList<LegalDocument>(soapModels.length);

		for (LegalDocumentSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.revotech.portal.tthc.model.LegalDocument"));

	public LegalDocumentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ldId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLdId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ldId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LegalDocument.class;
	}

	@Override
	public String getModelClassName() {
		return LegalDocument.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ldId", getLdId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ldCode", getLdCode());
		attributes.put("ldTitle", getLdTitle());
		attributes.put("ldLink", getLdLink());
		attributes.put("ldLevel3Link", getLdLevel3Link());
		attributes.put("ldSubcontent", getLdSubcontent());
		attributes.put("isActive", getIsActive());
		attributes.put("idLinhvuc", getIdLinhvuc());
		attributes.put("idCoquanbanhanh", getIdCoquanbanhanh());
		attributes.put("ldDonvithuchien", getLdDonvithuchien());
		attributes.put("ldLevel", getLdLevel());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long ldId = (Long)attributes.get("ldId");

		if (ldId != null) {
			setLdId(ldId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String ldCode = (String)attributes.get("ldCode");

		if (ldCode != null) {
			setLdCode(ldCode);
		}

		String ldTitle = (String)attributes.get("ldTitle");

		if (ldTitle != null) {
			setLdTitle(ldTitle);
		}

		String ldLink = (String)attributes.get("ldLink");

		if (ldLink != null) {
			setLdLink(ldLink);
		}

		String ldLevel3Link = (String)attributes.get("ldLevel3Link");

		if (ldLevel3Link != null) {
			setLdLevel3Link(ldLevel3Link);
		}

		String ldSubcontent = (String)attributes.get("ldSubcontent");

		if (ldSubcontent != null) {
			setLdSubcontent(ldSubcontent);
		}

		Boolean isActive = (Boolean)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		Long idLinhvuc = (Long)attributes.get("idLinhvuc");

		if (idLinhvuc != null) {
			setIdLinhvuc(idLinhvuc);
		}

		Long idCoquanbanhanh = (Long)attributes.get("idCoquanbanhanh");

		if (idCoquanbanhanh != null) {
			setIdCoquanbanhanh(idCoquanbanhanh);
		}

		String ldDonvithuchien = (String)attributes.get("ldDonvithuchien");

		if (ldDonvithuchien != null) {
			setLdDonvithuchien(ldDonvithuchien);
		}

		Integer ldLevel = (Integer)attributes.get("ldLevel");

		if (ldLevel != null) {
			setLdLevel(ldLevel);
		}
	}

	@JSON
	@Override
	public long getLdId() {
		return _ldId;
	}

	@Override
	public void setLdId(long ldId) {
		_ldId = ldId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getLdCode() {
		if (_ldCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _ldCode;
		}
	}

	@Override
	public void setLdCode(String ldCode) {
		_columnBitmask = -1L;

		_ldCode = ldCode;
	}

	@JSON
	@Override
	public String getLdTitle() {
		if (_ldTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _ldTitle;
		}
	}

	@Override
	public void setLdTitle(String ldTitle) {
		_ldTitle = ldTitle;
	}

	@JSON
	@Override
	public String getLdLink() {
		if (_ldLink == null) {
			return StringPool.BLANK;
		}
		else {
			return _ldLink;
		}
	}

	@Override
	public void setLdLink(String ldLink) {
		_ldLink = ldLink;
	}

	@JSON
	@Override
	public String getLdLevel3Link() {
		if (_ldLevel3Link == null) {
			return StringPool.BLANK;
		}
		else {
			return _ldLevel3Link;
		}
	}

	@Override
	public void setLdLevel3Link(String ldLevel3Link) {
		_ldLevel3Link = ldLevel3Link;
	}

	@JSON
	@Override
	public String getLdSubcontent() {
		if (_ldSubcontent == null) {
			return StringPool.BLANK;
		}
		else {
			return _ldSubcontent;
		}
	}

	@Override
	public void setLdSubcontent(String ldSubcontent) {
		_ldSubcontent = ldSubcontent;
	}

	@JSON
	@Override
	public boolean getIsActive() {
		return _isActive;
	}

	@Override
	public boolean isIsActive() {
		return _isActive;
	}

	@Override
	public void setIsActive(boolean isActive) {
		_columnBitmask |= ISACTIVE_COLUMN_BITMASK;

		if (!_setOriginalIsActive) {
			_setOriginalIsActive = true;

			_originalIsActive = _isActive;
		}

		_isActive = isActive;
	}

	public boolean getOriginalIsActive() {
		return _originalIsActive;
	}

	@JSON
	@Override
	public long getIdLinhvuc() {
		return _idLinhvuc;
	}

	@Override
	public void setIdLinhvuc(long idLinhvuc) {
		_idLinhvuc = idLinhvuc;
	}

	@JSON
	@Override
	public long getIdCoquanbanhanh() {
		return _idCoquanbanhanh;
	}

	@Override
	public void setIdCoquanbanhanh(long idCoquanbanhanh) {
		_idCoquanbanhanh = idCoquanbanhanh;
	}

	@JSON
	@Override
	public String getLdDonvithuchien() {
		if (_ldDonvithuchien == null) {
			return StringPool.BLANK;
		}
		else {
			return _ldDonvithuchien;
		}
	}

	@Override
	public void setLdDonvithuchien(String ldDonvithuchien) {
		_ldDonvithuchien = ldDonvithuchien;
	}

	@JSON
	@Override
	public int getLdLevel() {
		return _ldLevel;
	}

	@Override
	public void setLdLevel(int ldLevel) {
		_columnBitmask |= LDLEVEL_COLUMN_BITMASK;

		if (!_setOriginalLdLevel) {
			_setOriginalLdLevel = true;

			_originalLdLevel = _ldLevel;
		}

		_ldLevel = ldLevel;
	}

	public int getOriginalLdLevel() {
		return _originalLdLevel;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			LegalDocument.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LegalDocument toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LegalDocument)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LegalDocumentImpl legalDocumentImpl = new LegalDocumentImpl();

		legalDocumentImpl.setLdId(getLdId());
		legalDocumentImpl.setGroupId(getGroupId());
		legalDocumentImpl.setCompanyId(getCompanyId());
		legalDocumentImpl.setUserId(getUserId());
		legalDocumentImpl.setUserName(getUserName());
		legalDocumentImpl.setCreateDate(getCreateDate());
		legalDocumentImpl.setModifiedDate(getModifiedDate());
		legalDocumentImpl.setLdCode(getLdCode());
		legalDocumentImpl.setLdTitle(getLdTitle());
		legalDocumentImpl.setLdLink(getLdLink());
		legalDocumentImpl.setLdLevel3Link(getLdLevel3Link());
		legalDocumentImpl.setLdSubcontent(getLdSubcontent());
		legalDocumentImpl.setIsActive(getIsActive());
		legalDocumentImpl.setIdLinhvuc(getIdLinhvuc());
		legalDocumentImpl.setIdCoquanbanhanh(getIdCoquanbanhanh());
		legalDocumentImpl.setLdDonvithuchien(getLdDonvithuchien());
		legalDocumentImpl.setLdLevel(getLdLevel());

		legalDocumentImpl.resetOriginalValues();

		return legalDocumentImpl;
	}

	@Override
	public int compareTo(LegalDocument legalDocument) {
		int value = 0;

		value = getLdCode().compareTo(legalDocument.getLdCode());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LegalDocument)) {
			return false;
		}

		LegalDocument legalDocument = (LegalDocument)obj;

		long primaryKey = legalDocument.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LegalDocumentModelImpl legalDocumentModelImpl = this;

		legalDocumentModelImpl._originalGroupId = legalDocumentModelImpl._groupId;

		legalDocumentModelImpl._setOriginalGroupId = false;

		legalDocumentModelImpl._originalIsActive = legalDocumentModelImpl._isActive;

		legalDocumentModelImpl._setOriginalIsActive = false;

		legalDocumentModelImpl._originalLdLevel = legalDocumentModelImpl._ldLevel;

		legalDocumentModelImpl._setOriginalLdLevel = false;

		legalDocumentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LegalDocument> toCacheModel() {
		LegalDocumentCacheModel legalDocumentCacheModel = new LegalDocumentCacheModel();

		legalDocumentCacheModel.ldId = getLdId();

		legalDocumentCacheModel.groupId = getGroupId();

		legalDocumentCacheModel.companyId = getCompanyId();

		legalDocumentCacheModel.userId = getUserId();

		legalDocumentCacheModel.userName = getUserName();

		String userName = legalDocumentCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			legalDocumentCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			legalDocumentCacheModel.createDate = createDate.getTime();
		}
		else {
			legalDocumentCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			legalDocumentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			legalDocumentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		legalDocumentCacheModel.ldCode = getLdCode();

		String ldCode = legalDocumentCacheModel.ldCode;

		if ((ldCode != null) && (ldCode.length() == 0)) {
			legalDocumentCacheModel.ldCode = null;
		}

		legalDocumentCacheModel.ldTitle = getLdTitle();

		String ldTitle = legalDocumentCacheModel.ldTitle;

		if ((ldTitle != null) && (ldTitle.length() == 0)) {
			legalDocumentCacheModel.ldTitle = null;
		}

		legalDocumentCacheModel.ldLink = getLdLink();

		String ldLink = legalDocumentCacheModel.ldLink;

		if ((ldLink != null) && (ldLink.length() == 0)) {
			legalDocumentCacheModel.ldLink = null;
		}

		legalDocumentCacheModel.ldLevel3Link = getLdLevel3Link();

		String ldLevel3Link = legalDocumentCacheModel.ldLevel3Link;

		if ((ldLevel3Link != null) && (ldLevel3Link.length() == 0)) {
			legalDocumentCacheModel.ldLevel3Link = null;
		}

		legalDocumentCacheModel.ldSubcontent = getLdSubcontent();

		String ldSubcontent = legalDocumentCacheModel.ldSubcontent;

		if ((ldSubcontent != null) && (ldSubcontent.length() == 0)) {
			legalDocumentCacheModel.ldSubcontent = null;
		}

		legalDocumentCacheModel.isActive = getIsActive();

		legalDocumentCacheModel.idLinhvuc = getIdLinhvuc();

		legalDocumentCacheModel.idCoquanbanhanh = getIdCoquanbanhanh();

		legalDocumentCacheModel.ldDonvithuchien = getLdDonvithuchien();

		String ldDonvithuchien = legalDocumentCacheModel.ldDonvithuchien;

		if ((ldDonvithuchien != null) && (ldDonvithuchien.length() == 0)) {
			legalDocumentCacheModel.ldDonvithuchien = null;
		}

		legalDocumentCacheModel.ldLevel = getLdLevel();

		return legalDocumentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{ldId=");
		sb.append(getLdId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ldCode=");
		sb.append(getLdCode());
		sb.append(", ldTitle=");
		sb.append(getLdTitle());
		sb.append(", ldLink=");
		sb.append(getLdLink());
		sb.append(", ldLevel3Link=");
		sb.append(getLdLevel3Link());
		sb.append(", ldSubcontent=");
		sb.append(getLdSubcontent());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", idLinhvuc=");
		sb.append(getIdLinhvuc());
		sb.append(", idCoquanbanhanh=");
		sb.append(getIdCoquanbanhanh());
		sb.append(", ldDonvithuchien=");
		sb.append(getLdDonvithuchien());
		sb.append(", ldLevel=");
		sb.append(getLdLevel());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com.revotech.portal.tthc.model.LegalDocument");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ldId</column-name><column-value><![CDATA[");
		sb.append(getLdId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ldCode</column-name><column-value><![CDATA[");
		sb.append(getLdCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ldTitle</column-name><column-value><![CDATA[");
		sb.append(getLdTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ldLink</column-name><column-value><![CDATA[");
		sb.append(getLdLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ldLevel3Link</column-name><column-value><![CDATA[");
		sb.append(getLdLevel3Link());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ldSubcontent</column-name><column-value><![CDATA[");
		sb.append(getLdSubcontent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idLinhvuc</column-name><column-value><![CDATA[");
		sb.append(getIdLinhvuc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idCoquanbanhanh</column-name><column-value><![CDATA[");
		sb.append(getIdCoquanbanhanh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ldDonvithuchien</column-name><column-value><![CDATA[");
		sb.append(getLdDonvithuchien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ldLevel</column-name><column-value><![CDATA[");
		sb.append(getLdLevel());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LegalDocument.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LegalDocument.class
		};
	private long _ldId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _ldCode;
	private String _ldTitle;
	private String _ldLink;
	private String _ldLevel3Link;
	private String _ldSubcontent;
	private boolean _isActive;
	private boolean _originalIsActive;
	private boolean _setOriginalIsActive;
	private long _idLinhvuc;
	private long _idCoquanbanhanh;
	private String _ldDonvithuchien;
	private int _ldLevel;
	private int _originalLdLevel;
	private boolean _setOriginalLdLevel;
	private long _columnBitmask;
	private LegalDocument _escapedModel;
}