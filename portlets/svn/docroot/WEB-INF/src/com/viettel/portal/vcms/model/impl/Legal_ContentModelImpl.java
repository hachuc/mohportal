/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.viettel.portal.vcms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.viettel.portal.vcms.model.Legal_Content;
import com.viettel.portal.vcms.model.Legal_ContentModel;
import com.viettel.portal.vcms.model.Legal_ContentSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Legal_Content service. Represents a row in the &quot;Content&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viettel.portal.vcms.model.Legal_ContentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Legal_ContentImpl}.
 * </p>
 *
 * @author chuchv
 * @see Legal_ContentImpl
 * @see com.viettel.portal.vcms.model.Legal_Content
 * @see com.viettel.portal.vcms.model.Legal_ContentModel
 * @generated
 */
@JSON(strict = true)
public class Legal_ContentModelImpl extends BaseModelImpl<Legal_Content>
	implements Legal_ContentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a legal_ content model instance should use the {@link com.viettel.portal.vcms.model.Legal_Content} interface instead.
	 */
	public static final String TABLE_NAME = "Content";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.INTEGER },
			{ "ContentID", Types.INTEGER },
			{ "Version", Types.INTEGER },
			{ "CreationDate", Types.TIMESTAMP },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "Byline", Types.VARCHAR },
			{ "Headline", Types.VARCHAR },
			{ "Tagline", Types.VARCHAR },
			{ "Teaser", Types.VARCHAR },
			{ "Body", Types.CLOB },
			{ "Avatar", Types.VARCHAR },
			{ "ImageUrl", Types.VARCHAR },
			{ "ImageDescription", Types.VARCHAR },
			{ "ImageAlign", Types.INTEGER },
			{ "ZoneID", Types.INTEGER },
			{ "Source", Types.VARCHAR },
			{ "Status", Types.INTEGER },
			{ "Author", Types.VARCHAR },
			{ "Editor", Types.VARCHAR },
			{ "Approver", Types.VARCHAR },
			{ "Deployer", Types.VARCHAR },
			{ "Authors", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Content (ID INTEGER not null primary key,ContentID INTEGER,Version INTEGER,CreationDate DATE null,ModifiedDate DATE null,Byline VARCHAR(500) null,Headline VARCHAR(500) null,Tagline STRING null,Teaser STRING null,Body TEXT null,Avatar VARCHAR(255) null,ImageUrl VARCHAR(255) null,ImageDescription VARCHAR(255) null,ImageAlign INTEGER,ZoneID INTEGER,Source VARCHAR(255) null,Status INTEGER,Author VARCHAR(75) null,Editor VARCHAR(75) null,Approver VARCHAR(75) null,Deployer VARCHAR(75) null,Authors VARCHAR(255) null)";
	public static final String TABLE_SQL_DROP = "drop table Content";
	public static final String ORDER_BY_JPQL = " ORDER BY legal_Content.ModifiedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY Content.ModifiedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viettel.portal.vcms.model.Legal_Content"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viettel.portal.vcms.model.Legal_Content"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.viettel.portal.vcms.model.Legal_Content"),
			true);
	public static long STATUS_COLUMN_BITMASK = 1L;
	public static long ZONEID_COLUMN_BITMASK = 2L;
	public static long MODIFIEDDATE_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Legal_Content toModel(Legal_ContentSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Legal_Content model = new Legal_ContentImpl();

		model.setID(soapModel.getID());
		model.setContentID(soapModel.getContentID());
		model.setVersion(soapModel.getVersion());
		model.setCreationDate(soapModel.getCreationDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setByline(soapModel.getByline());
		model.setHeadline(soapModel.getHeadline());
		model.setTagline(soapModel.getTagline());
		model.setTeaser(soapModel.getTeaser());
		model.setBody(soapModel.getBody());
		model.setAvatar(soapModel.getAvatar());
		model.setImageUrl(soapModel.getImageUrl());
		model.setImageDescription(soapModel.getImageDescription());
		model.setImageAlign(soapModel.getImageAlign());
		model.setZoneID(soapModel.getZoneID());
		model.setSource(soapModel.getSource());
		model.setStatus(soapModel.getStatus());
		model.setAuthor(soapModel.getAuthor());
		model.setEditor(soapModel.getEditor());
		model.setApprover(soapModel.getApprover());
		model.setDeployer(soapModel.getDeployer());
		model.setAuthors(soapModel.getAuthors());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Legal_Content> toModels(Legal_ContentSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Legal_Content> models = new ArrayList<Legal_Content>(soapModels.length);

		for (Legal_ContentSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viettel.portal.vcms.model.Legal_Content"));

	public Legal_ContentModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Legal_Content.class;
	}

	@Override
	public String getModelClassName() {
		return Legal_Content.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ID", getID());
		attributes.put("ContentID", getContentID());
		attributes.put("Version", getVersion());
		attributes.put("CreationDate", getCreationDate());
		attributes.put("ModifiedDate", getModifiedDate());
		attributes.put("Byline", getByline());
		attributes.put("Headline", getHeadline());
		attributes.put("Tagline", getTagline());
		attributes.put("Teaser", getTeaser());
		attributes.put("Body", getBody());
		attributes.put("Avatar", getAvatar());
		attributes.put("ImageUrl", getImageUrl());
		attributes.put("ImageDescription", getImageDescription());
		attributes.put("ImageAlign", getImageAlign());
		attributes.put("ZoneID", getZoneID());
		attributes.put("Source", getSource());
		attributes.put("Status", getStatus());
		attributes.put("Author", getAuthor());
		attributes.put("Editor", getEditor());
		attributes.put("Approver", getApprover());
		attributes.put("Deployer", getDeployer());
		attributes.put("Authors", getAuthors());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer ID = (Integer)attributes.get("ID");

		if (ID != null) {
			setID(ID);
		}

		Integer ContentID = (Integer)attributes.get("ContentID");

		if (ContentID != null) {
			setContentID(ContentID);
		}

		Integer Version = (Integer)attributes.get("Version");

		if (Version != null) {
			setVersion(Version);
		}

		Date CreationDate = (Date)attributes.get("CreationDate");

		if (CreationDate != null) {
			setCreationDate(CreationDate);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}

		String Byline = (String)attributes.get("Byline");

		if (Byline != null) {
			setByline(Byline);
		}

		String Headline = (String)attributes.get("Headline");

		if (Headline != null) {
			setHeadline(Headline);
		}

		String Tagline = (String)attributes.get("Tagline");

		if (Tagline != null) {
			setTagline(Tagline);
		}

		String Teaser = (String)attributes.get("Teaser");

		if (Teaser != null) {
			setTeaser(Teaser);
		}

		String Body = (String)attributes.get("Body");

		if (Body != null) {
			setBody(Body);
		}

		String Avatar = (String)attributes.get("Avatar");

		if (Avatar != null) {
			setAvatar(Avatar);
		}

		String ImageUrl = (String)attributes.get("ImageUrl");

		if (ImageUrl != null) {
			setImageUrl(ImageUrl);
		}

		String ImageDescription = (String)attributes.get("ImageDescription");

		if (ImageDescription != null) {
			setImageDescription(ImageDescription);
		}

		Integer ImageAlign = (Integer)attributes.get("ImageAlign");

		if (ImageAlign != null) {
			setImageAlign(ImageAlign);
		}

		Integer ZoneID = (Integer)attributes.get("ZoneID");

		if (ZoneID != null) {
			setZoneID(ZoneID);
		}

		String Source = (String)attributes.get("Source");

		if (Source != null) {
			setSource(Source);
		}

		Integer Status = (Integer)attributes.get("Status");

		if (Status != null) {
			setStatus(Status);
		}

		String Author = (String)attributes.get("Author");

		if (Author != null) {
			setAuthor(Author);
		}

		String Editor = (String)attributes.get("Editor");

		if (Editor != null) {
			setEditor(Editor);
		}

		String Approver = (String)attributes.get("Approver");

		if (Approver != null) {
			setApprover(Approver);
		}

		String Deployer = (String)attributes.get("Deployer");

		if (Deployer != null) {
			setDeployer(Deployer);
		}

		String Authors = (String)attributes.get("Authors");

		if (Authors != null) {
			setAuthors(Authors);
		}
	}

	@JSON
	@Override
	public int getID() {
		return _ID;
	}

	@Override
	public void setID(int ID) {
		_ID = ID;
	}

	@JSON
	@Override
	public int getContentID() {
		return _ContentID;
	}

	@Override
	public void setContentID(int ContentID) {
		_ContentID = ContentID;
	}

	@JSON
	@Override
	public int getVersion() {
		return _Version;
	}

	@Override
	public void setVersion(int Version) {
		_Version = Version;
	}

	@JSON
	@Override
	public Date getCreationDate() {
		return _CreationDate;
	}

	@Override
	public void setCreationDate(Date CreationDate) {
		_CreationDate = CreationDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_columnBitmask = -1L;

		_ModifiedDate = ModifiedDate;
	}

	@JSON
	@Override
	public String getByline() {
		if (_Byline == null) {
			return StringPool.BLANK;
		}
		else {
			return _Byline;
		}
	}

	@Override
	public void setByline(String Byline) {
		_Byline = Byline;
	}

	@JSON
	@Override
	public String getHeadline() {
		if (_Headline == null) {
			return StringPool.BLANK;
		}
		else {
			return _Headline;
		}
	}

	@Override
	public void setHeadline(String Headline) {
		_Headline = Headline;
	}

	@JSON
	@Override
	public String getTagline() {
		if (_Tagline == null) {
			return StringPool.BLANK;
		}
		else {
			return _Tagline;
		}
	}

	@Override
	public void setTagline(String Tagline) {
		_Tagline = Tagline;
	}

	@JSON
	@Override
	public String getTeaser() {
		if (_Teaser == null) {
			return StringPool.BLANK;
		}
		else {
			return _Teaser;
		}
	}

	@Override
	public void setTeaser(String Teaser) {
		_Teaser = Teaser;
	}

	@JSON
	@Override
	public String getBody() {
		if (_Body == null) {
			return StringPool.BLANK;
		}
		else {
			return _Body;
		}
	}

	@Override
	public void setBody(String Body) {
		_Body = Body;
	}

	@JSON
	@Override
	public String getAvatar() {
		if (_Avatar == null) {
			return StringPool.BLANK;
		}
		else {
			return _Avatar;
		}
	}

	@Override
	public void setAvatar(String Avatar) {
		_Avatar = Avatar;
	}

	@JSON
	@Override
	public String getImageUrl() {
		if (_ImageUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _ImageUrl;
		}
	}

	@Override
	public void setImageUrl(String ImageUrl) {
		_ImageUrl = ImageUrl;
	}

	@JSON
	@Override
	public String getImageDescription() {
		if (_ImageDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _ImageDescription;
		}
	}

	@Override
	public void setImageDescription(String ImageDescription) {
		_ImageDescription = ImageDescription;
	}

	@JSON
	@Override
	public int getImageAlign() {
		return _ImageAlign;
	}

	@Override
	public void setImageAlign(int ImageAlign) {
		_ImageAlign = ImageAlign;
	}

	@JSON
	@Override
	public int getZoneID() {
		return _ZoneID;
	}

	@Override
	public void setZoneID(int ZoneID) {
		_columnBitmask |= ZONEID_COLUMN_BITMASK;

		if (!_setOriginalZoneID) {
			_setOriginalZoneID = true;

			_originalZoneID = _ZoneID;
		}

		_ZoneID = ZoneID;
	}

	public int getOriginalZoneID() {
		return _originalZoneID;
	}

	@JSON
	@Override
	public String getSource() {
		if (_Source == null) {
			return StringPool.BLANK;
		}
		else {
			return _Source;
		}
	}

	@Override
	public void setSource(String Source) {
		_Source = Source;
	}

	@JSON
	@Override
	public int getStatus() {
		return _Status;
	}

	@Override
	public void setStatus(int Status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _Status;
		}

		_Status = Status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@JSON
	@Override
	public String getAuthor() {
		if (_Author == null) {
			return StringPool.BLANK;
		}
		else {
			return _Author;
		}
	}

	@Override
	public void setAuthor(String Author) {
		_Author = Author;
	}

	@JSON
	@Override
	public String getEditor() {
		if (_Editor == null) {
			return StringPool.BLANK;
		}
		else {
			return _Editor;
		}
	}

	@Override
	public void setEditor(String Editor) {
		_Editor = Editor;
	}

	@JSON
	@Override
	public String getApprover() {
		if (_Approver == null) {
			return StringPool.BLANK;
		}
		else {
			return _Approver;
		}
	}

	@Override
	public void setApprover(String Approver) {
		_Approver = Approver;
	}

	@JSON
	@Override
	public String getDeployer() {
		if (_Deployer == null) {
			return StringPool.BLANK;
		}
		else {
			return _Deployer;
		}
	}

	@Override
	public void setDeployer(String Deployer) {
		_Deployer = Deployer;
	}

	@JSON
	@Override
	public String getAuthors() {
		if (_Authors == null) {
			return StringPool.BLANK;
		}
		else {
			return _Authors;
		}
	}

	@Override
	public void setAuthors(String Authors) {
		_Authors = Authors;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Legal_Content toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Legal_Content)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Legal_ContentImpl legal_ContentImpl = new Legal_ContentImpl();

		legal_ContentImpl.setID(getID());
		legal_ContentImpl.setContentID(getContentID());
		legal_ContentImpl.setVersion(getVersion());
		legal_ContentImpl.setCreationDate(getCreationDate());
		legal_ContentImpl.setModifiedDate(getModifiedDate());
		legal_ContentImpl.setByline(getByline());
		legal_ContentImpl.setHeadline(getHeadline());
		legal_ContentImpl.setTagline(getTagline());
		legal_ContentImpl.setTeaser(getTeaser());
		legal_ContentImpl.setBody(getBody());
		legal_ContentImpl.setAvatar(getAvatar());
		legal_ContentImpl.setImageUrl(getImageUrl());
		legal_ContentImpl.setImageDescription(getImageDescription());
		legal_ContentImpl.setImageAlign(getImageAlign());
		legal_ContentImpl.setZoneID(getZoneID());
		legal_ContentImpl.setSource(getSource());
		legal_ContentImpl.setStatus(getStatus());
		legal_ContentImpl.setAuthor(getAuthor());
		legal_ContentImpl.setEditor(getEditor());
		legal_ContentImpl.setApprover(getApprover());
		legal_ContentImpl.setDeployer(getDeployer());
		legal_ContentImpl.setAuthors(getAuthors());

		legal_ContentImpl.resetOriginalValues();

		return legal_ContentImpl;
	}

	@Override
	public int compareTo(Legal_Content legal_Content) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(),
				legal_Content.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Legal_Content)) {
			return false;
		}

		Legal_Content legal_Content = (Legal_Content)obj;

		int primaryKey = legal_Content.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		Legal_ContentModelImpl legal_ContentModelImpl = this;

		legal_ContentModelImpl._originalZoneID = legal_ContentModelImpl._ZoneID;

		legal_ContentModelImpl._setOriginalZoneID = false;

		legal_ContentModelImpl._originalStatus = legal_ContentModelImpl._Status;

		legal_ContentModelImpl._setOriginalStatus = false;

		legal_ContentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Legal_Content> toCacheModel() {
		Legal_ContentCacheModel legal_ContentCacheModel = new Legal_ContentCacheModel();

		legal_ContentCacheModel.ID = getID();

		legal_ContentCacheModel.ContentID = getContentID();

		legal_ContentCacheModel.Version = getVersion();

		Date CreationDate = getCreationDate();

		if (CreationDate != null) {
			legal_ContentCacheModel.CreationDate = CreationDate.getTime();
		}
		else {
			legal_ContentCacheModel.CreationDate = Long.MIN_VALUE;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			legal_ContentCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			legal_ContentCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		legal_ContentCacheModel.Byline = getByline();

		String Byline = legal_ContentCacheModel.Byline;

		if ((Byline != null) && (Byline.length() == 0)) {
			legal_ContentCacheModel.Byline = null;
		}

		legal_ContentCacheModel.Headline = getHeadline();

		String Headline = legal_ContentCacheModel.Headline;

		if ((Headline != null) && (Headline.length() == 0)) {
			legal_ContentCacheModel.Headline = null;
		}

		legal_ContentCacheModel.Tagline = getTagline();

		String Tagline = legal_ContentCacheModel.Tagline;

		if ((Tagline != null) && (Tagline.length() == 0)) {
			legal_ContentCacheModel.Tagline = null;
		}

		legal_ContentCacheModel.Teaser = getTeaser();

		String Teaser = legal_ContentCacheModel.Teaser;

		if ((Teaser != null) && (Teaser.length() == 0)) {
			legal_ContentCacheModel.Teaser = null;
		}

		legal_ContentCacheModel.Body = getBody();

		String Body = legal_ContentCacheModel.Body;

		if ((Body != null) && (Body.length() == 0)) {
			legal_ContentCacheModel.Body = null;
		}

		legal_ContentCacheModel.Avatar = getAvatar();

		String Avatar = legal_ContentCacheModel.Avatar;

		if ((Avatar != null) && (Avatar.length() == 0)) {
			legal_ContentCacheModel.Avatar = null;
		}

		legal_ContentCacheModel.ImageUrl = getImageUrl();

		String ImageUrl = legal_ContentCacheModel.ImageUrl;

		if ((ImageUrl != null) && (ImageUrl.length() == 0)) {
			legal_ContentCacheModel.ImageUrl = null;
		}

		legal_ContentCacheModel.ImageDescription = getImageDescription();

		String ImageDescription = legal_ContentCacheModel.ImageDescription;

		if ((ImageDescription != null) && (ImageDescription.length() == 0)) {
			legal_ContentCacheModel.ImageDescription = null;
		}

		legal_ContentCacheModel.ImageAlign = getImageAlign();

		legal_ContentCacheModel.ZoneID = getZoneID();

		legal_ContentCacheModel.Source = getSource();

		String Source = legal_ContentCacheModel.Source;

		if ((Source != null) && (Source.length() == 0)) {
			legal_ContentCacheModel.Source = null;
		}

		legal_ContentCacheModel.Status = getStatus();

		legal_ContentCacheModel.Author = getAuthor();

		String Author = legal_ContentCacheModel.Author;

		if ((Author != null) && (Author.length() == 0)) {
			legal_ContentCacheModel.Author = null;
		}

		legal_ContentCacheModel.Editor = getEditor();

		String Editor = legal_ContentCacheModel.Editor;

		if ((Editor != null) && (Editor.length() == 0)) {
			legal_ContentCacheModel.Editor = null;
		}

		legal_ContentCacheModel.Approver = getApprover();

		String Approver = legal_ContentCacheModel.Approver;

		if ((Approver != null) && (Approver.length() == 0)) {
			legal_ContentCacheModel.Approver = null;
		}

		legal_ContentCacheModel.Deployer = getDeployer();

		String Deployer = legal_ContentCacheModel.Deployer;

		if ((Deployer != null) && (Deployer.length() == 0)) {
			legal_ContentCacheModel.Deployer = null;
		}

		legal_ContentCacheModel.Authors = getAuthors();

		String Authors = legal_ContentCacheModel.Authors;

		if ((Authors != null) && (Authors.length() == 0)) {
			legal_ContentCacheModel.Authors = null;
		}

		return legal_ContentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{ID=");
		sb.append(getID());
		sb.append(", ContentID=");
		sb.append(getContentID());
		sb.append(", Version=");
		sb.append(getVersion());
		sb.append(", CreationDate=");
		sb.append(getCreationDate());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", Byline=");
		sb.append(getByline());
		sb.append(", Headline=");
		sb.append(getHeadline());
		sb.append(", Tagline=");
		sb.append(getTagline());
		sb.append(", Teaser=");
		sb.append(getTeaser());
		sb.append(", Body=");
		sb.append(getBody());
		sb.append(", Avatar=");
		sb.append(getAvatar());
		sb.append(", ImageUrl=");
		sb.append(getImageUrl());
		sb.append(", ImageDescription=");
		sb.append(getImageDescription());
		sb.append(", ImageAlign=");
		sb.append(getImageAlign());
		sb.append(", ZoneID=");
		sb.append(getZoneID());
		sb.append(", Source=");
		sb.append(getSource());
		sb.append(", Status=");
		sb.append(getStatus());
		sb.append(", Author=");
		sb.append(getAuthor());
		sb.append(", Editor=");
		sb.append(getEditor());
		sb.append(", Approver=");
		sb.append(getApprover());
		sb.append(", Deployer=");
		sb.append(getDeployer());
		sb.append(", Authors=");
		sb.append(getAuthors());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("com.viettel.portal.vcms.model.Legal_Content");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ID</column-name><column-value><![CDATA[");
		sb.append(getID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ContentID</column-name><column-value><![CDATA[");
		sb.append(getContentID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Version</column-name><column-value><![CDATA[");
		sb.append(getVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreationDate</column-name><column-value><![CDATA[");
		sb.append(getCreationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Byline</column-name><column-value><![CDATA[");
		sb.append(getByline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Headline</column-name><column-value><![CDATA[");
		sb.append(getHeadline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Tagline</column-name><column-value><![CDATA[");
		sb.append(getTagline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Teaser</column-name><column-value><![CDATA[");
		sb.append(getTeaser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Body</column-name><column-value><![CDATA[");
		sb.append(getBody());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Avatar</column-name><column-value><![CDATA[");
		sb.append(getAvatar());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ImageUrl</column-name><column-value><![CDATA[");
		sb.append(getImageUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ImageDescription</column-name><column-value><![CDATA[");
		sb.append(getImageDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ImageAlign</column-name><column-value><![CDATA[");
		sb.append(getImageAlign());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ZoneID</column-name><column-value><![CDATA[");
		sb.append(getZoneID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Author</column-name><column-value><![CDATA[");
		sb.append(getAuthor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Editor</column-name><column-value><![CDATA[");
		sb.append(getEditor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Approver</column-name><column-value><![CDATA[");
		sb.append(getApprover());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Deployer</column-name><column-value><![CDATA[");
		sb.append(getDeployer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Authors</column-name><column-value><![CDATA[");
		sb.append(getAuthors());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Legal_Content.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Legal_Content.class
		};
	private int _ID;
	private int _ContentID;
	private int _Version;
	private Date _CreationDate;
	private Date _ModifiedDate;
	private String _Byline;
	private String _Headline;
	private String _Tagline;
	private String _Teaser;
	private String _Body;
	private String _Avatar;
	private String _ImageUrl;
	private String _ImageDescription;
	private int _ImageAlign;
	private int _ZoneID;
	private int _originalZoneID;
	private boolean _setOriginalZoneID;
	private String _Source;
	private int _Status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private String _Author;
	private String _Editor;
	private String _Approver;
	private String _Deployer;
	private String _Authors;
	private long _columnBitmask;
	private Legal_Content _escapedModel;
}