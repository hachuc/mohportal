/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.viettel.portal.vcms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.viettel.portal.vcms.model.ContentType;
import com.viettel.portal.vcms.model.ContentTypeModel;
import com.viettel.portal.vcms.model.ContentTypeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ContentType service. Represents a row in the &quot;vcms_Content_Type&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viettel.portal.vcms.model.ContentTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ContentTypeImpl}.
 * </p>
 *
 * @author chuchv
 * @see ContentTypeImpl
 * @see com.viettel.portal.vcms.model.ContentType
 * @see com.viettel.portal.vcms.model.ContentTypeModel
 * @generated
 */
@JSON(strict = true)
public class ContentTypeModelImpl extends BaseModelImpl<ContentType>
	implements ContentTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a content type model instance should use the {@link com.viettel.portal.vcms.model.ContentType} interface instead.
	 */
	public static final String TABLE_NAME = "vcms_Content_Type";
	public static final Object[][] TABLE_COLUMNS = {
			{ "contenTypeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "sortOrder", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table vcms_Content_Type (contenTypeId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,name VARCHAR(255) null,description VARCHAR(255) null,sortOrder INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table vcms_Content_Type";
	public static final String ORDER_BY_JPQL = " ORDER BY contentType.sortOrder ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vcms_Content_Type.sortOrder ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viettel.portal.vcms.model.ContentType"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viettel.portal.vcms.model.ContentType"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.viettel.portal.vcms.model.ContentType"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long NAME_COLUMN_BITMASK = 2L;
	public static long SORTORDER_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ContentType toModel(ContentTypeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ContentType model = new ContentTypeImpl();

		model.setContenTypeId(soapModel.getContenTypeId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());
		model.setSortOrder(soapModel.getSortOrder());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ContentType> toModels(ContentTypeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ContentType> models = new ArrayList<ContentType>(soapModels.length);

		for (ContentTypeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viettel.portal.vcms.model.ContentType"));

	public ContentTypeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _contenTypeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setContenTypeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _contenTypeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ContentType.class;
	}

	@Override
	public String getModelClassName() {
		return ContentType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("contenTypeId", getContenTypeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("sortOrder", getSortOrder());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long contenTypeId = (Long)attributes.get("contenTypeId");

		if (contenTypeId != null) {
			setContenTypeId(contenTypeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Integer sortOrder = (Integer)attributes.get("sortOrder");

		if (sortOrder != null) {
			setSortOrder(sortOrder);
		}
	}

	@JSON
	@Override
	public long getContenTypeId() {
		return _contenTypeId;
	}

	@Override
	public void setContenTypeId(long contenTypeId) {
		_contenTypeId = contenTypeId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public int getSortOrder() {
		return _sortOrder;
	}

	@Override
	public void setSortOrder(int sortOrder) {
		_columnBitmask = -1L;

		_sortOrder = sortOrder;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ContentType.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ContentType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ContentType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ContentTypeImpl contentTypeImpl = new ContentTypeImpl();

		contentTypeImpl.setContenTypeId(getContenTypeId());
		contentTypeImpl.setGroupId(getGroupId());
		contentTypeImpl.setCompanyId(getCompanyId());
		contentTypeImpl.setUserId(getUserId());
		contentTypeImpl.setName(getName());
		contentTypeImpl.setDescription(getDescription());
		contentTypeImpl.setSortOrder(getSortOrder());

		contentTypeImpl.resetOriginalValues();

		return contentTypeImpl;
	}

	@Override
	public int compareTo(ContentType contentType) {
		int value = 0;

		if (getSortOrder() < contentType.getSortOrder()) {
			value = -1;
		}
		else if (getSortOrder() > contentType.getSortOrder()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ContentType)) {
			return false;
		}

		ContentType contentType = (ContentType)obj;

		long primaryKey = contentType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ContentTypeModelImpl contentTypeModelImpl = this;

		contentTypeModelImpl._originalGroupId = contentTypeModelImpl._groupId;

		contentTypeModelImpl._setOriginalGroupId = false;

		contentTypeModelImpl._originalName = contentTypeModelImpl._name;

		contentTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ContentType> toCacheModel() {
		ContentTypeCacheModel contentTypeCacheModel = new ContentTypeCacheModel();

		contentTypeCacheModel.contenTypeId = getContenTypeId();

		contentTypeCacheModel.groupId = getGroupId();

		contentTypeCacheModel.companyId = getCompanyId();

		contentTypeCacheModel.userId = getUserId();

		contentTypeCacheModel.name = getName();

		String name = contentTypeCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			contentTypeCacheModel.name = null;
		}

		contentTypeCacheModel.description = getDescription();

		String description = contentTypeCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			contentTypeCacheModel.description = null;
		}

		contentTypeCacheModel.sortOrder = getSortOrder();

		return contentTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{contenTypeId=");
		sb.append(getContenTypeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", sortOrder=");
		sb.append(getSortOrder());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.viettel.portal.vcms.model.ContentType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>contenTypeId</column-name><column-value><![CDATA[");
		sb.append(getContenTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sortOrder</column-name><column-value><![CDATA[");
		sb.append(getSortOrder());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ContentType.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ContentType.class
		};
	private long _contenTypeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _name;
	private String _originalName;
	private String _description;
	private int _sortOrder;
	private long _columnBitmask;
	private ContentType _escapedModel;
}