/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.viettel.portal.vcms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.viettel.portal.vcms.model.Legal_ContentProfit;
import com.viettel.portal.vcms.model.Legal_ContentProfitModel;
import com.viettel.portal.vcms.model.Legal_ContentProfitSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Legal_ContentProfit service. Represents a row in the &quot;ContentProfit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viettel.portal.vcms.model.Legal_ContentProfitModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Legal_ContentProfitImpl}.
 * </p>
 *
 * @author chuchv
 * @see Legal_ContentProfitImpl
 * @see com.viettel.portal.vcms.model.Legal_ContentProfit
 * @see com.viettel.portal.vcms.model.Legal_ContentProfitModel
 * @generated
 */
@JSON(strict = true)
public class Legal_ContentProfitModelImpl extends BaseModelImpl<Legal_ContentProfit>
	implements Legal_ContentProfitModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a legal_ content profit model instance should use the {@link com.viettel.portal.vcms.model.Legal_ContentProfit} interface instead.
	 */
	public static final String TABLE_NAME = "ContentProfit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ContentID", Types.INTEGER },
			{ "ContentTypeID", Types.INTEGER },
			{ "Headline", Types.VARCHAR },
			{ "Cost", Types.DOUBLE },
			{ "Author", Types.VARCHAR },
			{ "Status", Types.INTEGER },
			{ "CreationDate", Types.TIMESTAMP },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "DistributedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table ContentProfit (ContentID INTEGER not null primary key,ContentTypeID INTEGER,Headline STRING null,Cost DOUBLE,Author VARCHAR(75) null,Status INTEGER,CreationDate DATE null,ModifiedDate DATE null,DistributedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table ContentProfit";
	public static final String ORDER_BY_JPQL = " ORDER BY legal_ContentProfit.DistributedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY ContentProfit.DistributedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viettel.portal.vcms.model.Legal_ContentProfit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viettel.portal.vcms.model.Legal_ContentProfit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Legal_ContentProfit toModel(Legal_ContentProfitSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Legal_ContentProfit model = new Legal_ContentProfitImpl();

		model.setContentID(soapModel.getContentID());
		model.setContentTypeID(soapModel.getContentTypeID());
		model.setHeadline(soapModel.getHeadline());
		model.setCost(soapModel.getCost());
		model.setAuthor(soapModel.getAuthor());
		model.setStatus(soapModel.getStatus());
		model.setCreationDate(soapModel.getCreationDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setDistributedDate(soapModel.getDistributedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Legal_ContentProfit> toModels(
		Legal_ContentProfitSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Legal_ContentProfit> models = new ArrayList<Legal_ContentProfit>(soapModels.length);

		for (Legal_ContentProfitSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viettel.portal.vcms.model.Legal_ContentProfit"));

	public Legal_ContentProfitModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ContentID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setContentID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ContentID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Legal_ContentProfit.class;
	}

	@Override
	public String getModelClassName() {
		return Legal_ContentProfit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ContentID", getContentID());
		attributes.put("ContentTypeID", getContentTypeID());
		attributes.put("Headline", getHeadline());
		attributes.put("Cost", getCost());
		attributes.put("Author", getAuthor());
		attributes.put("Status", getStatus());
		attributes.put("CreationDate", getCreationDate());
		attributes.put("ModifiedDate", getModifiedDate());
		attributes.put("DistributedDate", getDistributedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer ContentID = (Integer)attributes.get("ContentID");

		if (ContentID != null) {
			setContentID(ContentID);
		}

		Integer ContentTypeID = (Integer)attributes.get("ContentTypeID");

		if (ContentTypeID != null) {
			setContentTypeID(ContentTypeID);
		}

		String Headline = (String)attributes.get("Headline");

		if (Headline != null) {
			setHeadline(Headline);
		}

		Double Cost = (Double)attributes.get("Cost");

		if (Cost != null) {
			setCost(Cost);
		}

		String Author = (String)attributes.get("Author");

		if (Author != null) {
			setAuthor(Author);
		}

		Integer Status = (Integer)attributes.get("Status");

		if (Status != null) {
			setStatus(Status);
		}

		Date CreationDate = (Date)attributes.get("CreationDate");

		if (CreationDate != null) {
			setCreationDate(CreationDate);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}

		Date DistributedDate = (Date)attributes.get("DistributedDate");

		if (DistributedDate != null) {
			setDistributedDate(DistributedDate);
		}
	}

	@JSON
	@Override
	public int getContentID() {
		return _ContentID;
	}

	@Override
	public void setContentID(int ContentID) {
		_ContentID = ContentID;
	}

	@JSON
	@Override
	public int getContentTypeID() {
		return _ContentTypeID;
	}

	@Override
	public void setContentTypeID(int ContentTypeID) {
		_ContentTypeID = ContentTypeID;
	}

	@JSON
	@Override
	public String getHeadline() {
		if (_Headline == null) {
			return StringPool.BLANK;
		}
		else {
			return _Headline;
		}
	}

	@Override
	public void setHeadline(String Headline) {
		_Headline = Headline;
	}

	@JSON
	@Override
	public double getCost() {
		return _Cost;
	}

	@Override
	public void setCost(double Cost) {
		_Cost = Cost;
	}

	@JSON
	@Override
	public String getAuthor() {
		if (_Author == null) {
			return StringPool.BLANK;
		}
		else {
			return _Author;
		}
	}

	@Override
	public void setAuthor(String Author) {
		_Author = Author;
	}

	@JSON
	@Override
	public int getStatus() {
		return _Status;
	}

	@Override
	public void setStatus(int Status) {
		_Status = Status;
	}

	@JSON
	@Override
	public Date getCreationDate() {
		return _CreationDate;
	}

	@Override
	public void setCreationDate(Date CreationDate) {
		_CreationDate = CreationDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@JSON
	@Override
	public Date getDistributedDate() {
		return _DistributedDate;
	}

	@Override
	public void setDistributedDate(Date DistributedDate) {
		_DistributedDate = DistributedDate;
	}

	@Override
	public Legal_ContentProfit toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Legal_ContentProfit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Legal_ContentProfitImpl legal_ContentProfitImpl = new Legal_ContentProfitImpl();

		legal_ContentProfitImpl.setContentID(getContentID());
		legal_ContentProfitImpl.setContentTypeID(getContentTypeID());
		legal_ContentProfitImpl.setHeadline(getHeadline());
		legal_ContentProfitImpl.setCost(getCost());
		legal_ContentProfitImpl.setAuthor(getAuthor());
		legal_ContentProfitImpl.setStatus(getStatus());
		legal_ContentProfitImpl.setCreationDate(getCreationDate());
		legal_ContentProfitImpl.setModifiedDate(getModifiedDate());
		legal_ContentProfitImpl.setDistributedDate(getDistributedDate());

		legal_ContentProfitImpl.resetOriginalValues();

		return legal_ContentProfitImpl;
	}

	@Override
	public int compareTo(Legal_ContentProfit legal_ContentProfit) {
		int value = 0;

		value = DateUtil.compareTo(getDistributedDate(),
				legal_ContentProfit.getDistributedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Legal_ContentProfit)) {
			return false;
		}

		Legal_ContentProfit legal_ContentProfit = (Legal_ContentProfit)obj;

		int primaryKey = legal_ContentProfit.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Legal_ContentProfit> toCacheModel() {
		Legal_ContentProfitCacheModel legal_ContentProfitCacheModel = new Legal_ContentProfitCacheModel();

		legal_ContentProfitCacheModel.ContentID = getContentID();

		legal_ContentProfitCacheModel.ContentTypeID = getContentTypeID();

		legal_ContentProfitCacheModel.Headline = getHeadline();

		String Headline = legal_ContentProfitCacheModel.Headline;

		if ((Headline != null) && (Headline.length() == 0)) {
			legal_ContentProfitCacheModel.Headline = null;
		}

		legal_ContentProfitCacheModel.Cost = getCost();

		legal_ContentProfitCacheModel.Author = getAuthor();

		String Author = legal_ContentProfitCacheModel.Author;

		if ((Author != null) && (Author.length() == 0)) {
			legal_ContentProfitCacheModel.Author = null;
		}

		legal_ContentProfitCacheModel.Status = getStatus();

		Date CreationDate = getCreationDate();

		if (CreationDate != null) {
			legal_ContentProfitCacheModel.CreationDate = CreationDate.getTime();
		}
		else {
			legal_ContentProfitCacheModel.CreationDate = Long.MIN_VALUE;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			legal_ContentProfitCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			legal_ContentProfitCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		Date DistributedDate = getDistributedDate();

		if (DistributedDate != null) {
			legal_ContentProfitCacheModel.DistributedDate = DistributedDate.getTime();
		}
		else {
			legal_ContentProfitCacheModel.DistributedDate = Long.MIN_VALUE;
		}

		return legal_ContentProfitCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{ContentID=");
		sb.append(getContentID());
		sb.append(", ContentTypeID=");
		sb.append(getContentTypeID());
		sb.append(", Headline=");
		sb.append(getHeadline());
		sb.append(", Cost=");
		sb.append(getCost());
		sb.append(", Author=");
		sb.append(getAuthor());
		sb.append(", Status=");
		sb.append(getStatus());
		sb.append(", CreationDate=");
		sb.append(getCreationDate());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", DistributedDate=");
		sb.append(getDistributedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.viettel.portal.vcms.model.Legal_ContentProfit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ContentID</column-name><column-value><![CDATA[");
		sb.append(getContentID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ContentTypeID</column-name><column-value><![CDATA[");
		sb.append(getContentTypeID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Headline</column-name><column-value><![CDATA[");
		sb.append(getHeadline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Cost</column-name><column-value><![CDATA[");
		sb.append(getCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Author</column-name><column-value><![CDATA[");
		sb.append(getAuthor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreationDate</column-name><column-value><![CDATA[");
		sb.append(getCreationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DistributedDate</column-name><column-value><![CDATA[");
		sb.append(getDistributedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Legal_ContentProfit.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Legal_ContentProfit.class
		};
	private int _ContentID;
	private int _ContentTypeID;
	private String _Headline;
	private double _Cost;
	private String _Author;
	private int _Status;
	private Date _CreationDate;
	private Date _ModifiedDate;
	private Date _DistributedDate;
	private Legal_ContentProfit _escapedModel;
}