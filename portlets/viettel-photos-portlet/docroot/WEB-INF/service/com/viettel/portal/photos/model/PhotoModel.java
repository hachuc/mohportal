/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.viettel.portal.photos.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Photo service. Represents a row in the &quot;portal_photo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.viettel.portal.photos.model.impl.PhotoModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.viettel.portal.photos.model.impl.PhotoImpl}.
 * </p>
 *
 * @author ChucHV
 * @see Photo
 * @see com.viettel.portal.photos.model.impl.PhotoImpl
 * @see com.viettel.portal.photos.model.impl.PhotoModelImpl
 * @generated
 */
public interface PhotoModel extends BaseModel<Photo> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a photo model instance should use the {@link Photo} interface instead.
	 */

	/**
	 * Returns the primary key of this photo.
	 *
	 * @return the primary key of this photo
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this photo.
	 *
	 * @param primaryKey the primary key of this photo
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the photo ID of this photo.
	 *
	 * @return the photo ID of this photo
	 */
	public long getPhotoId();

	/**
	 * Sets the photo ID of this photo.
	 *
	 * @param photoId the photo ID of this photo
	 */
	public void setPhotoId(long photoId);

	/**
	 * Returns the caption of this photo.
	 *
	 * @return the caption of this photo
	 */
	@AutoEscape
	public String getCaption();

	/**
	 * Sets the caption of this photo.
	 *
	 * @param caption the caption of this photo
	 */
	public void setCaption(String caption);

	/**
	 * Returns the file ID of this photo.
	 *
	 * @return the file ID of this photo
	 */
	public long getFileId();

	/**
	 * Sets the file ID of this photo.
	 *
	 * @param fileId the file ID of this photo
	 */
	public void setFileId(long fileId);

	/**
	 * Returns the file link of this photo.
	 *
	 * @return the file link of this photo
	 */
	@AutoEscape
	public String getFileLink();

	/**
	 * Sets the file link of this photo.
	 *
	 * @param fileLink the file link of this photo
	 */
	public void setFileLink(String fileLink);

	/**
	 * Returns the file name of this photo.
	 *
	 * @return the file name of this photo
	 */
	@AutoEscape
	public String getFileName();

	/**
	 * Sets the file name of this photo.
	 *
	 * @param fileName the file name of this photo
	 */
	public void setFileName(String fileName);

	/**
	 * Returns the file size of this photo.
	 *
	 * @return the file size of this photo
	 */
	@AutoEscape
	public String getFileSize();

	/**
	 * Sets the file size of this photo.
	 *
	 * @param fileSize the file size of this photo
	 */
	public void setFileSize(String fileSize);

	/**
	 * Returns the create date of this photo.
	 *
	 * @return the create date of this photo
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this photo.
	 *
	 * @param createDate the create date of this photo
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modify date of this photo.
	 *
	 * @return the modify date of this photo
	 */
	public Date getModifyDate();

	/**
	 * Sets the modify date of this photo.
	 *
	 * @param modifyDate the modify date of this photo
	 */
	public void setModifyDate(Date modifyDate);

	/**
	 * Returns the order_ of this photo.
	 *
	 * @return the order_ of this photo
	 */
	public int getOrder_();

	/**
	 * Sets the order_ of this photo.
	 *
	 * @param order_ the order_ of this photo
	 */
	public void setOrder_(int order_);

	/**
	 * Returns the status of this photo.
	 *
	 * @return the status of this photo
	 */
	public boolean getStatus();

	/**
	 * Returns <code>true</code> if this photo is status.
	 *
	 * @return <code>true</code> if this photo is status; <code>false</code> otherwise
	 */
	public boolean isStatus();

	/**
	 * Sets whether this photo is status.
	 *
	 * @param status the status of this photo
	 */
	public void setStatus(boolean status);

	/**
	 * Returns the user name of this photo.
	 *
	 * @return the user name of this photo
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this photo.
	 *
	 * @param userName the user name of this photo
	 */
	public void setUserName(String userName);

	/**
	 * Returns the user ID of this photo.
	 *
	 * @return the user ID of this photo
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this photo.
	 *
	 * @param userId the user ID of this photo
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this photo.
	 *
	 * @return the user uuid of this photo
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this photo.
	 *
	 * @param userUuid the user uuid of this photo
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the company ID of this photo.
	 *
	 * @return the company ID of this photo
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this photo.
	 *
	 * @param companyId the company ID of this photo
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the category ID of this photo.
	 *
	 * @return the category ID of this photo
	 */
	public long getCategoryId();

	/**
	 * Sets the category ID of this photo.
	 *
	 * @param categoryId the category ID of this photo
	 */
	public void setCategoryId(long categoryId);

	/**
	 * Returns the group ID of this photo.
	 *
	 * @return the group ID of this photo
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this photo.
	 *
	 * @param groupId the group ID of this photo
	 */
	public void setGroupId(long groupId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.viettel.portal.photos.model.Photo photo);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.viettel.portal.photos.model.Photo> toCacheModel();

	@Override
	public com.viettel.portal.photos.model.Photo toEscapedModel();

	@Override
	public com.viettel.portal.photos.model.Photo toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}