/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package com.viettel.portal.photos.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.viettel.portal.photos.model.Photo;
import com.viettel.portal.photos.model.PhotoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Photo service. Represents a row in the &quot;portal_photo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viettel.portal.photos.model.PhotoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PhotoImpl}.
 * </p>
 *
 * @author ChucHV
 * @see PhotoImpl
 * @see com.viettel.portal.photos.model.Photo
 * @see com.viettel.portal.photos.model.PhotoModel
 * @generated
 */
public class PhotoModelImpl extends BaseModelImpl<Photo> implements PhotoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a photo model instance should use the {@link com.viettel.portal.photos.model.Photo} interface instead.
	 */
	public static final String TABLE_NAME = "portal_photo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "photoId", Types.BIGINT },
			{ "caption", Types.VARCHAR },
			{ "fileId", Types.BIGINT },
			{ "fileLink", Types.VARCHAR },
			{ "fileName", Types.VARCHAR },
			{ "fileSize", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifyDate", Types.TIMESTAMP },
			{ "ORDER_", Types.INTEGER },
			{ "status", Types.BOOLEAN },
			{ "userName", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "categoryId", Types.BIGINT },
			{ "groupId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table portal_photo (photoId LONG not null primary key,caption VARCHAR(75) null,fileId LONG,fileLink VARCHAR(75) null,fileName VARCHAR(75) null,fileSize VARCHAR(75) null,createDate DATE null,modifyDate DATE null,ORDER_ INTEGER,status BOOLEAN,userName VARCHAR(75) null,userId LONG,companyId LONG,categoryId LONG,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table portal_photo";
	public static final String ORDER_BY_JPQL = " ORDER BY photo.order_ ASC, photo.createDate DESC, photo.caption ASC";
	public static final String ORDER_BY_SQL = " ORDER BY portal_photo.ORDER_ ASC, portal_photo.createDate DESC, portal_photo.caption ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viettel.portal.photos.model.Photo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viettel.portal.photos.model.Photo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.viettel.portal.photos.model.Photo"),
			true);
	public static long CATEGORYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long STATUS_COLUMN_BITMASK = 4L;
	public static long ORDER__COLUMN_BITMASK = 8L;
	public static long CREATEDATE_COLUMN_BITMASK = 16L;
	public static long CAPTION_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viettel.portal.photos.model.Photo"));

	public PhotoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _photoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPhotoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _photoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Photo.class;
	}

	@Override
	public String getModelClassName() {
		return Photo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("photoId", getPhotoId());
		attributes.put("caption", getCaption());
		attributes.put("fileId", getFileId());
		attributes.put("fileLink", getFileLink());
		attributes.put("fileName", getFileName());
		attributes.put("fileSize", getFileSize());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifyDate", getModifyDate());
		attributes.put("order_", getOrder_());
		attributes.put("status", getStatus());
		attributes.put("userName", getUserName());
		attributes.put("userId", getUserId());
		attributes.put("companyId", getCompanyId());
		attributes.put("categoryId", getCategoryId());
		attributes.put("groupId", getGroupId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long photoId = (Long)attributes.get("photoId");

		if (photoId != null) {
			setPhotoId(photoId);
		}

		String caption = (String)attributes.get("caption");

		if (caption != null) {
			setCaption(caption);
		}

		Long fileId = (Long)attributes.get("fileId");

		if (fileId != null) {
			setFileId(fileId);
		}

		String fileLink = (String)attributes.get("fileLink");

		if (fileLink != null) {
			setFileLink(fileLink);
		}

		String fileName = (String)attributes.get("fileName");

		if (fileName != null) {
			setFileName(fileName);
		}

		String fileSize = (String)attributes.get("fileSize");

		if (fileSize != null) {
			setFileSize(fileSize);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifyDate = (Date)attributes.get("modifyDate");

		if (modifyDate != null) {
			setModifyDate(modifyDate);
		}

		Integer order_ = (Integer)attributes.get("order_");

		if (order_ != null) {
			setOrder_(order_);
		}

		Boolean status = (Boolean)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getPhotoId() {
		return _photoId;
	}

	@Override
	public void setPhotoId(long photoId) {
		_photoId = photoId;
	}

	@Override
	public String getCaption() {
		if (_caption == null) {
			return StringPool.BLANK;
		}
		else {
			return _caption;
		}
	}

	@Override
	public void setCaption(String caption) {
		_columnBitmask = -1L;

		_caption = caption;
	}

	@Override
	public long getFileId() {
		return _fileId;
	}

	@Override
	public void setFileId(long fileId) {
		_fileId = fileId;
	}

	@Override
	public String getFileLink() {
		if (_fileLink == null) {
			return StringPool.BLANK;
		}
		else {
			return _fileLink;
		}
	}

	@Override
	public void setFileLink(String fileLink) {
		_fileLink = fileLink;
	}

	@Override
	public String getFileName() {
		if (_fileName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fileName;
		}
	}

	@Override
	public void setFileName(String fileName) {
		_fileName = fileName;
	}

	@Override
	public String getFileSize() {
		if (_fileSize == null) {
			return StringPool.BLANK;
		}
		else {
			return _fileSize;
		}
	}

	@Override
	public void setFileSize(String fileSize) {
		_fileSize = fileSize;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifyDate() {
		return _modifyDate;
	}

	@Override
	public void setModifyDate(Date modifyDate) {
		_modifyDate = modifyDate;
	}

	@Override
	public int getOrder_() {
		return _order_;
	}

	@Override
	public void setOrder_(int order_) {
		_columnBitmask = -1L;

		_order_ = order_;
	}

	@Override
	public boolean getStatus() {
		return _status;
	}

	@Override
	public boolean isStatus() {
		return _status;
	}

	@Override
	public void setStatus(boolean status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public boolean getOriginalStatus() {
		return _originalStatus;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Photo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Photo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Photo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PhotoImpl photoImpl = new PhotoImpl();

		photoImpl.setPhotoId(getPhotoId());
		photoImpl.setCaption(getCaption());
		photoImpl.setFileId(getFileId());
		photoImpl.setFileLink(getFileLink());
		photoImpl.setFileName(getFileName());
		photoImpl.setFileSize(getFileSize());
		photoImpl.setCreateDate(getCreateDate());
		photoImpl.setModifyDate(getModifyDate());
		photoImpl.setOrder_(getOrder_());
		photoImpl.setStatus(getStatus());
		photoImpl.setUserName(getUserName());
		photoImpl.setUserId(getUserId());
		photoImpl.setCompanyId(getCompanyId());
		photoImpl.setCategoryId(getCategoryId());
		photoImpl.setGroupId(getGroupId());

		photoImpl.resetOriginalValues();

		return photoImpl;
	}

	@Override
	public int compareTo(Photo photo) {
		int value = 0;

		if (getOrder_() < photo.getOrder_()) {
			value = -1;
		}
		else if (getOrder_() > photo.getOrder_()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = DateUtil.compareTo(getCreateDate(), photo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		value = getCaption().compareTo(photo.getCaption());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Photo)) {
			return false;
		}

		Photo photo = (Photo)obj;

		long primaryKey = photo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PhotoModelImpl photoModelImpl = this;

		photoModelImpl._originalStatus = photoModelImpl._status;

		photoModelImpl._setOriginalStatus = false;

		photoModelImpl._originalCategoryId = photoModelImpl._categoryId;

		photoModelImpl._setOriginalCategoryId = false;

		photoModelImpl._originalGroupId = photoModelImpl._groupId;

		photoModelImpl._setOriginalGroupId = false;

		photoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Photo> toCacheModel() {
		PhotoCacheModel photoCacheModel = new PhotoCacheModel();

		photoCacheModel.photoId = getPhotoId();

		photoCacheModel.caption = getCaption();

		String caption = photoCacheModel.caption;

		if ((caption != null) && (caption.length() == 0)) {
			photoCacheModel.caption = null;
		}

		photoCacheModel.fileId = getFileId();

		photoCacheModel.fileLink = getFileLink();

		String fileLink = photoCacheModel.fileLink;

		if ((fileLink != null) && (fileLink.length() == 0)) {
			photoCacheModel.fileLink = null;
		}

		photoCacheModel.fileName = getFileName();

		String fileName = photoCacheModel.fileName;

		if ((fileName != null) && (fileName.length() == 0)) {
			photoCacheModel.fileName = null;
		}

		photoCacheModel.fileSize = getFileSize();

		String fileSize = photoCacheModel.fileSize;

		if ((fileSize != null) && (fileSize.length() == 0)) {
			photoCacheModel.fileSize = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			photoCacheModel.createDate = createDate.getTime();
		}
		else {
			photoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			photoCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			photoCacheModel.modifyDate = Long.MIN_VALUE;
		}

		photoCacheModel.order_ = getOrder_();

		photoCacheModel.status = getStatus();

		photoCacheModel.userName = getUserName();

		String userName = photoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			photoCacheModel.userName = null;
		}

		photoCacheModel.userId = getUserId();

		photoCacheModel.companyId = getCompanyId();

		photoCacheModel.categoryId = getCategoryId();

		photoCacheModel.groupId = getGroupId();

		return photoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{photoId=");
		sb.append(getPhotoId());
		sb.append(", caption=");
		sb.append(getCaption());
		sb.append(", fileId=");
		sb.append(getFileId());
		sb.append(", fileLink=");
		sb.append(getFileLink());
		sb.append(", fileName=");
		sb.append(getFileName());
		sb.append(", fileSize=");
		sb.append(getFileSize());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append(", order_=");
		sb.append(getOrder_());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", categoryId=");
		sb.append(getCategoryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("com.viettel.portal.photos.model.Photo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>photoId</column-name><column-value><![CDATA[");
		sb.append(getPhotoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>caption</column-name><column-value><![CDATA[");
		sb.append(getCaption());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileId</column-name><column-value><![CDATA[");
		sb.append(getFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileLink</column-name><column-value><![CDATA[");
		sb.append(getFileLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileName</column-name><column-value><![CDATA[");
		sb.append(getFileName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileSize</column-name><column-value><![CDATA[");
		sb.append(getFileSize());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>order_</column-name><column-value><![CDATA[");
		sb.append(getOrder_());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Photo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Photo.class };
	private long _photoId;
	private String _caption;
	private long _fileId;
	private String _fileLink;
	private String _fileName;
	private String _fileSize;
	private Date _createDate;
	private Date _modifyDate;
	private int _order_;
	private boolean _status;
	private boolean _originalStatus;
	private boolean _setOriginalStatus;
	private String _userName;
	private long _userId;
	private String _userUuid;
	private long _companyId;
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _columnBitmask;
	private Photo _escapedModel;
}